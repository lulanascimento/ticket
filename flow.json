[
    {
        "id": "e0965f0491bf9519",
        "type": "tab",
        "label": "state_machine",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e0965f0491bf9519",
        "type": "tab",
        "label": "state_machine",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6d8c566ec5f87da8",
        "type": "tab",
        "label": "get_incidents_sn",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e66a861ba662bbf5",
        "type": "tab",
        "label": "update_urpa_sn",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d1c95fc1605030a2",
        "type": "tab",
        "label": "find_globoid_description",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "47f0885872b75352",
        "type": "tab",
        "label": "post_userinfo_glive_sn",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cc16a76a903a3abe",
        "type": "tab",
        "label": "post_userservices_glive_sn",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e4c3a86ff1dc480d",
        "type": "tab",
        "label": "post_userservices_brm_sn",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "469e5b1367b8d770",
        "type": "tab",
        "label": "post_userservices_sf_sn",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c8a66f4349d507f0",
        "type": "tab",
        "label": "Testes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ac118e5391c2942",
        "type": "subflow",
        "name": "do updatestatus incidents",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 200,
                "wires": [
                    {
                        "id": "18393beb70ecc165"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 200,
                "wires": [
                    {
                        "id": "06d1fdbae376dd5e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8834afe330b03dfe",
        "type": "subflow",
        "name": "do Log",
        "info": "Expects:\n\n`msg.payload.table`\n\n`msg.payload.key` *optional*\n\n`msg.payload.type`\n\n`msg.payload.message`",
        "category": "storage",
        "in": [
            {
                "x": 120,
                "y": 120,
                "wires": [
                    {
                        "id": "3c20a7ba83dd55c6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 120,
                "wires": [
                    {
                        "id": "0e2089b384223b79",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-file-text"
    },
    {
        "id": "7bf8a2ce.ed32ac",
        "type": "subflow",
        "name": "Iterator",
        "info": "",
        "category": "function",
        "in": [
            {
                "x": 220,
                "y": 219,
                "wires": [
                    {
                        "id": "68f842bd.e95fcc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 454,
                "y": 174,
                "wires": [
                    {
                        "id": "68f842bd.e95fcc",
                        "port": 0
                    }
                ]
            },
            {
                "x": 455,
                "y": 259,
                "wires": [
                    {
                        "id": "68f842bd.e95fcc",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "iterator_level",
                "type": "num",
                "value": "0"
            }
        ],
        "icon": "font-awesome/fa-retweet"
    },
    {
        "id": "16f3d73135fe8c4b",
        "type": "subflow",
        "name": "do update consult_system_aux",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 220,
                "wires": [
                    {
                        "id": "593265e7474f81bf"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 220,
                "wires": [
                    {
                        "id": "cb92cb1fc55db277",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0230d1167fca2ffe",
        "type": "subflow",
        "name": "GET SALES SUPPORT GLIVE",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 220,
                "wires": [
                    {
                        "id": "0d1ecc166b02dd55"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 220,
                "wires": [
                    {
                        "id": "97f77fa0491412b4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "31d3ae1201a194fd",
        "type": "subflow",
        "name": "HTTP SERVICE-NOW",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 260,
                "wires": [
                    {
                        "id": "b513cf20ee82becd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 380,
                "wires": [
                    {
                        "id": "659bd26f153bf510",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "eb03a259e83e8e17",
        "type": "subflow",
        "name": "HTTP BRM",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 420,
                "y": 300,
                "wires": [
                    {
                        "id": "4e21115aa20af136"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 300,
                "wires": [
                    {
                        "id": "b8475a958bbc27ac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "61c1c45f22c94422",
        "type": "group",
        "z": "e0965f0491bf9519",
        "name": "READ PARAMETERS",
        "style": {
            "label": true
        },
        "nodes": [
            "b741ebbc83e23e61",
            "093b05ecab01cf42",
            "8e7b1652e087f5db",
            "c17ba926c754c2c6",
            "fdb0792b97643e21",
            "113d4fd9c32f7243",
            "4de46c7d48863770",
            "db5e30104c25f0b0",
            "483102302c9cb6f3",
            "99687896c09c034d",
            "9a947a60352d04ca",
            "71bea38862ec3c6b",
            "86058e963911534a",
            "efc4f318107f6c98",
            "8aeacfc0997fe0ad",
            "b29a29bb6174fdab",
            "94c587b66bf7521d",
            "05aa0cc29820dd70",
            "adead694bd20685c"
        ],
        "x": 14,
        "y": 79,
        "w": 1832,
        "h": 302
    },
    {
        "id": "904e391f7d71b85b",
        "type": "group",
        "z": "e0965f0491bf9519",
        "name": "LOG END OR ERROR",
        "style": {
            "label": true
        },
        "nodes": [
            "28f9188778917671",
            "5bd51c3f1af51819",
            "066168aefc95ecfe",
            "803ca0b22709a0fe",
            "1236340e927f57b2",
            "f3b091776748f862"
        ],
        "x": 334,
        "y": 759,
        "w": 672,
        "h": 162
    },
    {
        "id": "f796494786185e0b",
        "type": "group",
        "z": "e0965f0491bf9519",
        "name": "START - STATE MACHINE",
        "style": {
            "label": true
        },
        "nodes": [
            "65f7b1905ceaf0ae",
            "b746fa6312fcc147",
            "535c89e5c9a657e2",
            "dd8b3edf6c7be0c2",
            "4f1c9ba9d56a3a0d"
        ],
        "x": 14,
        "y": 419,
        "w": 802,
        "h": 82
    },
    {
        "id": "ee7c5705691f6d75",
        "type": "group",
        "z": "e0965f0491bf9519",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "7ae627917516b39f",
            "e3a2a1926ee5ea1f",
            "f0b79441d3cf08ca",
            "1bd4f772855bbf5d",
            "62be391e036d8333",
            "b7837ea621809ed9",
            "fb3899a6f80a4da2",
            "196deafe9dca6863",
            "296208cf8982b24c",
            "23d9618bbf23af28",
            "9905d3f5e7322e12",
            "b29449c54516825a",
            "a41a5a18be11abf6",
            "2b9951ef824a13b8",
            "848db27cdf1e0a80",
            "e5241122177a01b4",
            "f3afba65791e9d67",
            "3f5ef249699cd136",
            "57f21486ecbe9e80"
        ],
        "x": 14,
        "y": 539,
        "w": 1952,
        "h": 182
    },
    {
        "id": "146dfa41d7d323a1",
        "type": "group",
        "z": "e4c3a86ff1dc480d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3eb76c21e13b5c97",
            "60413e8f249ead48",
            "36908efad8caa40f",
            "da314a6871f8acf7",
            "1bb86dd10fbf8a50",
            "d2d40d6d3eb69fbb",
            "1e66bd33d6bc82ee",
            "04760674b8064c20",
            "4e9c51ad97ee55a8",
            "83de2e27cb035e6c",
            "8c6b7f3e055161d6",
            "ed05b18a9f98600a",
            "c0e8cd22c3e4404b"
        ],
        "x": 14,
        "y": 59,
        "w": 1552,
        "h": 222
    },
    {
        "id": "fdb84df0786f49b1",
        "type": "group",
        "z": "e0965f0491bf9519",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "72b433048218a730",
            "1cf6d9c1bc9113b6",
            "2cdd64f4def93059",
            "26219d5795cac3b6",
            "613a52da24c365cf",
            "0a3e5fa469089aa5",
            "769315f8b386288d"
        ],
        "x": 14,
        "y": 999,
        "w": 1432,
        "h": 142
    },
    {
        "id": "e75eda53c61c11a6",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "172.18.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "rpa",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "rpa",
        "userFieldType": "str",
        "password": "rpabd",
        "passwordFieldType": "str"
    },
    {
        "id": "142e1a49012fa9bf",
        "type": "MySQLdatabase",
        "name": "",
        "host": "${DBAAS_MYSQL_HOSTS}",
        "port": "${DBAAS_MYSQL_PORT}",
        "db": "${DBAAS_MYSQL_DATABASE}",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "7acce723d51c6064",
        "type": "connection-config",
        "name": "CONNECT SF",
        "poturl": "${RPA_SALESFORCE_INSTANCE_URL}",
        "consumerKey": "${RPA_SALESFORCE_CONSUMER_KEY}",
        "consumerSecret": "${RPA_SALESFORCE_CONSUMER_SECRET}",
        "callbackUrl": "${RPA_SALESFORCE_CALLBACK_URL}",
        "environment": "production",
        "credentialType": "oauth",
        "useEnvCredentials": false,
        "allowMsgCredentials": false,
        "userName": "${RPA_SALESFORCE_USER}",
        "passWord": "${RPA_SALESFORCE_PASS}",
        "apiversion": "v45.0"
    },
    {
        "id": "18393beb70ecc165",
        "type": "function",
        "z": "3ac118e5391c2942",
        "name": "Prepare Update status Query",
        "func": "  // Esperamos um msg.parameters.updatestatus com pelo menos os campos { table,type, message, key } podendo ou não ter o campo { task }\n  //const { cutInUTF8 } = global.get('util');\n  const cols = \"SYS_ID, STATUS,ERROR_DESCRIPTION\";\n  const { table,sys_id,status,task } = msg.parameters.updatestatus;\n  const error_description = msg.parameters.updatestatus.error_description ? msg.parameters.updatestatus.error_description : \"\"\n  \n  msg.topic =\n  `\n  UPDATE ${table}\n  SET status = '${status}',\n  error_description = '${error_description}'\n  WHERE\n  action = '${task}'\n  and sys_id = '${sys_id}' ;\n  `;\n  return msg;\n  \n  ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "1ece4ef788831574"
            ]
        ]
    },
    {
        "id": "06d1fdbae376dd5e",
        "type": "function",
        "z": "3ac118e5391c2942",
        "name": "Clear params",
        "func": " msg.params = null\n return msg;\n  \n  ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1ece4ef788831574",
        "type": "mysql",
        "z": "3ac118e5391c2942",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "06d1fdbae376dd5e"
            ]
        ]
    },
    {
        "id": "0e2089b384223b79",
        "type": "function",
        "z": "8834afe330b03dfe",
        "name": "Clear params",
        "func": " msg.params = null\n return msg;\n  \n  ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3c20a7ba83dd55c6",
        "type": "function",
        "z": "8834afe330b03dfe",
        "name": "Prepare Log Query",
        "func": "  // Esperamos um msg.parameters.log com pelo menos os campos { table,type, message, key } podendo ou não ter o campo { task }\n  //const { cutInUTF8 } = global.get('util');\n  const cols = \"LOG_KEY, LOG_TYPE, LOG_MESSAGE, LOG_COMPONENT, LOG_SESSION, LOG_TASK, LOG_MACHINE\";\n  const typeList = [\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\"];\n  const { type, message, key } = msg.parameters.log;\n\n  const task = msg.msgInfo && msg.msgInfo.logTask ? msg.msgInfo.logTask : msg.parameters.log.task;\n\n  const table = msg.parameters.log.table;\n\n  msg.msgInfo = msg.msgInfo && msg.msgInfo.msgId ? msg.msgInfo : { msgId: msg._msgid };\n  typeInsert = typeList.find(typeName => typeName === type)? typeList.find(typeName => typeName === type): \"INFO\";\n \n  msg.topic = `INSERT INTO ${table} ( ${cols} ) VALUES ( '${key}', '${typeInsert}', '${message}', 'NodeRed', '${msg.msgInfo.msgId}', '${task}', '${env.get(\"HOSTNAME\")}' )`;\n\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 120,
        "wires": [
            [
                "0de380945039ef1f"
            ]
        ]
    },
    {
        "id": "0de380945039ef1f",
        "type": "mysql",
        "z": "8834afe330b03dfe",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "0e2089b384223b79"
            ]
        ]
    },
    {
        "id": "68f842bd.e95fcc",
        "type": "function",
        "z": "7bf8a2ce.ed32ac",
        "name": "Iterator",
        "func": "  const iteratorLevel = env.get(\"iterator_level\");\n  const iteratorName = `iState${iteratorLevel > 0 ? iteratorLevel : \"\"}`;\n  let currentMsg = null;\n  let outMessage = null;\n  let iState = msg[iteratorName];\n  if (!iState) {\n    // we received an initial message\n    // if the message is not an array, make it one\n    if (Object.prototype.toString.call(msg.payload) !== \"[object Array]\") {\n      msg.payload = [msg.payload];\n    }\n    iState = {};\n    iState.index = 0;\n    iState.inArray = msg.payload;\n    iState.outArray = [];\n    msg[iteratorName] = iState;\n  } else {\n    // save results from the last iteration\n    iState.outArray.push(msg.payload);\n  }\n  //If there are still objects left to iterate goto the next one in the original array\n  if (iState.index < iState.inArray.length) {\n    currentMsg = msg;\n    msg.payload = iState.inArray[iState.index];\n  } else {\n    currentMsg = null;\n    outMessage = msg;\n    msg.payload = iState.outArray;\n    delete msg[iteratorName];\n  }\n  iState.index++;\n  return [currentMsg, outMessage];",
        "outputs": "2",
        "noerr": 0,
        "x": 340,
        "y": 220,
        "wires": [
            [],
            []
        ],
        "icon": "font-awesome/fa-retweet"
    },
    {
        "id": "593265e7474f81bf",
        "type": "function",
        "z": "16f3d73135fe8c4b",
        "name": "Prepare Update status Query",
        "func": "  // Esperamos um msg.parameters.updatestatus com pelo menos os campos { table,type, message, key } podendo ou não ter o campo { task }\n  //const { cutInUTF8 } = global.get('util');\n  const cols = \"SYS_ID,GLOBOID, STATUS,ERROR_DESCRIPTION\";\n  const { table,sys_id,globoid,status,task } = msg.parameters.updatestatus;\n  const error_description = msg.parameters.updatestatus.error_description ? msg.parameters.updatestatus.error_description : \"\"\n  \n  msg.topic =\n  `\n  UPDATE ${table}\n  SET status = '${status}',\n  error_description = '${error_description}'\n  WHERE\n  action = '${task}'\n  and sys_id = '${sys_id}'\n  and globoid = '${globoid}' ;\n  `\n  \n  return msg;\n  \n  ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 220,
        "wires": [
            [
                "b34619dc653248e5"
            ]
        ]
    },
    {
        "id": "cb92cb1fc55db277",
        "type": "function",
        "z": "16f3d73135fe8c4b",
        "name": "Clear params",
        "func": " msg.params = null\n return msg;\n  \n  ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b34619dc653248e5",
        "type": "mysql",
        "z": "16f3d73135fe8c4b",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "cb92cb1fc55db277"
            ]
        ]
    },
    {
        "id": "0d1ecc166b02dd55",
        "type": "change",
        "z": "0230d1167fca2ffe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "accept: */*",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.password",
                "pt": "msg",
                "to": "RPA_SALES_SUPPORT_GLIVE_PASS",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "headers.username",
                "pt": "msg",
                "to": "RPA_SALES_SUPPORT_GLIVE_USER",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "97f77fa0491412b4"
            ]
        ]
    },
    {
        "id": "97f77fa0491412b4",
        "type": "http request",
        "z": "0230d1167fca2ffe",
        "name": "GET Sales Suport",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 550,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b513cf20ee82becd",
        "type": "change",
        "z": "31d3ae1201a194fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "URL",
                "pt": "flow",
                "to": "url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "METHOD",
                "pt": "flow",
                "to": "method",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "PAYLOAD",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "bbc4d6442084f64b"
            ]
        ]
    },
    {
        "id": "bbc4d6442084f64b",
        "type": "function",
        "z": "31d3ae1201a194fd",
        "name": "Set Url GET",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/oauth_token.do`\nmsg.url = path\n\nmsg.headers = {\n'content-type':'application/x-www-form-urlencoded'\n}\n\nvar data = {\n'grant_type': 'refresh_token',\n'refresh_token': env.get(\"RPA_SERVICENOW_REFRESHTOKEN\"),\n'client_id': env.get(\"RPA_SERVICENOW_CLIENTIID\"),\n'client_secret': env.get(\"RPA_SERVICENOW_CLIENTSECRET\")\n};\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "81086290b0a2679a"
            ]
        ]
    },
    {
        "id": "81086290b0a2679a",
        "type": "http request",
        "z": "31d3ae1201a194fd",
        "name": "GET TOKEN",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "8f7471b9127025de"
            ]
        ]
    },
    {
        "id": "8f7471b9127025de",
        "type": "change",
        "z": "31d3ae1201a194fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sn_access_token",
                "pt": "global",
                "to": "payload.access_token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sn_access_token_time",
                "pt": "global",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 260,
        "wires": [
            [
                "8c0b011d42df7c20"
            ]
        ]
    },
    {
        "id": "8c0b011d42df7c20",
        "type": "function",
        "z": "31d3ae1201a194fd",
        "name": "Set Url GET",
        "func": "path = flow.get(\"URL\")\nmsg.payload = flow.get(\"PAYLOAD\")\nmsg.method = flow.get(\"METHOD\")\nmsg.headers = {\n    'Authorization':'Bearer ' + global.get('sn_access_token')\n}\nmsg.url = path\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 380,
        "wires": [
            [
                "659bd26f153bf510"
            ]
        ]
    },
    {
        "id": "659bd26f153bf510",
        "type": "http request",
        "z": "31d3ae1201a194fd",
        "name": "HTTP SN",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 360,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "5cb0f356eae67108",
        "type": "comment",
        "z": "31d3ae1201a194fd",
        "name": "Emergencial alter in Deploy ver 1.",
        "info": "",
        "x": 170,
        "y": 200,
        "wires": []
    },
    {
        "id": "4e21115aa20af136",
        "type": "function",
        "z": "eb03a259e83e8e17",
        "name": "Set Url GET",
        "func": "msg.headers = {\n    'Authorization':'Bearer ' + global.get('brm_backstage_access_token')\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "b8475a958bbc27ac"
            ]
        ]
    },
    {
        "id": "b8475a958bbc27ac",
        "type": "http request",
        "z": "eb03a259e83e8e17",
        "name": "HTTP BRM",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 730,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "75c908ba20955014",
        "type": "comment",
        "z": "eb03a259e83e8e17",
        "name": "Emergencial alter in Deploy ver 1.",
        "info": "",
        "x": 510,
        "y": 240,
        "wires": []
    },
    {
        "id": "7ae627917516b39f",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "Prepare Control State Machine",
        "func": "// ----------------------------------------------------------------\n\nupdates = flow.keys()\n\nupdates = updates.slice([4])\n\nmsg.payload = updates\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 660,
        "wires": [
            [
                "b7837ea621809ed9"
            ]
        ]
    },
    {
        "id": "e3a2a1926ee5ea1f",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "env": [],
        "x": 740,
        "y": 660,
        "wires": [
            [
                "848db27cdf1e0a80"
            ],
            [
                "196deafe9dca6863"
            ]
        ]
    },
    {
        "id": "f0b79441d3cf08ca",
        "type": "change",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 640,
        "wires": [
            [
                "1bd4f772855bbf5d"
            ]
        ]
    },
    {
        "id": "1bd4f772855bbf5d",
        "type": "mysql",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 1530,
        "y": 640,
        "wires": [
            [
                "a41a5a18be11abf6",
                "23d9618bbf23af28"
            ]
        ]
    },
    {
        "id": "a41a5a18be11abf6",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "mode": "link",
        "links": [
            "62be391e036d8333"
        ],
        "x": 1725,
        "y": 640,
        "wires": []
    },
    {
        "id": "62be391e036d8333",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "links": [
            "b7837ea621809ed9",
            "a41a5a18be11abf6"
        ],
        "x": 625,
        "y": 660,
        "wires": [
            [
                "e3a2a1926ee5ea1f"
            ]
        ]
    },
    {
        "id": "b7837ea621809ed9",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "mode": "link",
        "links": [
            "62be391e036d8333"
        ],
        "x": 455,
        "y": 660,
        "wires": []
    },
    {
        "id": "fb3899a6f80a4da2",
        "type": "comment",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "State Machine - rpa_incidents and rpa_consult_system_aux",
        "info": "",
        "x": 260,
        "y": 600,
        "wires": []
    },
    {
        "id": "196deafe9dca6863",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "mode": "link",
        "links": [
            "8d0c2dc0b3a59ac5",
            "5bd51c3f1af51819"
        ],
        "x": 875,
        "y": 680,
        "wires": []
    },
    {
        "id": "65f7b1905ceaf0ae",
        "type": "inject",
        "z": "e0965f0491bf9519",
        "g": "f796494786185e0b",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "b746fa6312fcc147"
            ]
        ]
    },
    {
        "id": "b746fa6312fcc147",
        "type": "change",
        "z": "e0965f0491bf9519",
        "g": "f796494786185e0b",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_state_machine",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_state_machine_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_state_machine_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "state_machine",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 460,
        "wires": [
            [
                "535c89e5c9a657e2"
            ]
        ]
    },
    {
        "id": "535c89e5c9a657e2",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "f796494786185e0b",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 460,
        "wires": [
            [
                "dd8b3edf6c7be0c2"
            ]
        ]
    },
    {
        "id": "dd8b3edf6c7be0c2",
        "type": "subflow:8834afe330b03dfe",
        "z": "e0965f0491bf9519",
        "g": "f796494786185e0b",
        "name": "",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "4f1c9ba9d56a3a0d"
            ]
        ]
    },
    {
        "id": "9905d3f5e7322e12",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "log update",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `update index=${msg.iState.index}`,\n    type: 'INFO',\n    message: `rpa_incidents, affectedRows=${msg.payload.affectedRows}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 580,
        "wires": [
            [
                "b29449c54516825a"
            ]
        ]
    },
    {
        "id": "b29449c54516825a",
        "type": "subflow:8834afe330b03dfe",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "x": 1890,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "23d9618bbf23af28",
        "type": "switch",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "property": "payload.affectedRows",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1570,
        "y": 580,
        "wires": [
            [
                "9905d3f5e7322e12"
            ]
        ]
    },
    {
        "id": "4f1c9ba9d56a3a0d",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "f796494786185e0b",
        "name": "",
        "mode": "link",
        "links": [
            "296208cf8982b24c"
        ],
        "x": 775,
        "y": 460,
        "wires": []
    },
    {
        "id": "296208cf8982b24c",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "links": [
            "4f1c9ba9d56a3a0d"
        ],
        "x": 75,
        "y": 660,
        "wires": [
            [
                "7ae627917516b39f"
            ]
        ]
    },
    {
        "id": "28f9188778917671",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "904e391f7d71b85b",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 800,
        "wires": [
            [
                "066168aefc95ecfe"
            ]
        ]
    },
    {
        "id": "5bd51c3f1af51819",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "904e391f7d71b85b",
        "name": "",
        "links": [
            "f743740f443cc7f5",
            "196deafe9dca6863"
        ],
        "x": 495,
        "y": 800,
        "wires": [
            [
                "28f9188778917671"
            ]
        ]
    },
    {
        "id": "066168aefc95ecfe",
        "type": "subflow:8834afe330b03dfe",
        "z": "e0965f0491bf9519",
        "g": "904e391f7d71b85b",
        "name": "",
        "x": 770,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "803ca0b22709a0fe",
        "type": "catch",
        "z": "e0965f0491bf9519",
        "g": "904e391f7d71b85b",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 420,
        "y": 880,
        "wires": [
            [
                "1236340e927f57b2"
            ]
        ]
    },
    {
        "id": "1236340e927f57b2",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "904e391f7d71b85b",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 880,
        "wires": [
            [
                "f3b091776748f862"
            ]
        ]
    },
    {
        "id": "f3b091776748f862",
        "type": "subflow:8834afe330b03dfe",
        "z": "e0965f0491bf9519",
        "g": "904e391f7d71b85b",
        "name": "",
        "x": 930,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "fdb0792b97643e21",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "Mount select parameters",
        "func": "var query_machine_status =\n(\n`SELECT id, PARAMETER, value\nFROM ${flow.get(\"TABLE_PARAMS\")}\nWHERE active = 1\nand parameter_type = 'UPDATE';\n`\n)\nmsg.topic = query_machine_status\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 180,
        "wires": [
            [
                "4de46c7d48863770"
            ]
        ]
    },
    {
        "id": "8e7b1652e087f5db",
        "type": "inject",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "c17ba926c754c2c6"
            ]
        ]
    },
    {
        "id": "4de46c7d48863770",
        "type": "mysql",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "db5e30104c25f0b0"
            ]
        ]
    },
    {
        "id": "9a947a60352d04ca",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "env": [],
        "x": 1350,
        "y": 160,
        "wires": [
            [
                "71bea38862ec3c6b"
            ],
            [
                "86058e963911534a"
            ]
        ]
    },
    {
        "id": "db5e30104c25f0b0",
        "type": "switch",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "Exist update?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "483102302c9cb6f3"
            ],
            []
        ]
    },
    {
        "id": "8aeacfc0997fe0ad",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "Set Parameter",
        "func": "flow.set(msg.payload.PARAMETER, msg.payload.value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 260,
        "wires": [
            [
                "b29a29bb6174fdab"
            ]
        ]
    },
    {
        "id": "483102302c9cb6f3",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "mode": "link",
        "links": [
            "99687896c09c034d"
        ],
        "x": 1205,
        "y": 160,
        "wires": []
    },
    {
        "id": "99687896c09c034d",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "links": [
            "483102302c9cb6f3",
            "b29a29bb6174fdab"
        ],
        "x": 1255,
        "y": 160,
        "wires": [
            [
                "9a947a60352d04ca"
            ]
        ]
    },
    {
        "id": "efc4f318107f6c98",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "links": [
            "71bea38862ec3c6b"
        ],
        "x": 1285,
        "y": 260,
        "wires": [
            [
                "8aeacfc0997fe0ad"
            ]
        ]
    },
    {
        "id": "b741ebbc83e23e61",
        "type": "comment",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "State Machine - Update Parameters",
        "info": "",
        "x": 180,
        "y": 120,
        "wires": []
    },
    {
        "id": "093b05ecab01cf42",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START - reading parameters`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "113d4fd9c32f7243"
            ]
        ]
    },
    {
        "id": "113d4fd9c32f7243",
        "type": "subflow:8834afe330b03dfe",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "x": 570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c17ba926c754c2c6",
        "type": "change",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_state_machine",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_state_machine_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_state_machine_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "state_machine",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "fdb0792b97643e21",
                "093b05ecab01cf42"
            ]
        ]
    },
    {
        "id": "adead694bd20685c",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "links": [
            "86058e963911534a"
        ],
        "x": 1285,
        "y": 340,
        "wires": [
            [
                "94c587b66bf7521d"
            ]
        ]
    },
    {
        "id": "05aa0cc29820dd70",
        "type": "subflow:8834afe330b03dfe",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "x": 1770,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "94c587b66bf7521d",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "LOG END - READING PARAMETERS",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `END - reading parameters - SUCESS`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 340,
        "wires": [
            [
                "05aa0cc29820dd70"
            ]
        ]
    },
    {
        "id": "b29a29bb6174fdab",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "mode": "link",
        "links": [
            "99687896c09c034d"
        ],
        "x": 1545,
        "y": 260,
        "wires": []
    },
    {
        "id": "86058e963911534a",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "mode": "link",
        "links": [
            "adead694bd20685c"
        ],
        "x": 1455,
        "y": 180,
        "wires": []
    },
    {
        "id": "71bea38862ec3c6b",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "61c1c45f22c94422",
        "name": "",
        "mode": "link",
        "links": [
            "efc4f318107f6c98"
        ],
        "x": 1465,
        "y": 140,
        "wires": []
    },
    {
        "id": "2b9951ef824a13b8",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "func": "msg.payload = flow.get(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 640,
        "wires": [
            [
                "f0b79441d3cf08ca"
            ]
        ]
    },
    {
        "id": "848db27cdf1e0a80",
        "type": "link out",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "mode": "link",
        "links": [
            "e5241122177a01b4",
            "f3afba65791e9d67"
        ],
        "x": 875,
        "y": 640,
        "wires": []
    },
    {
        "id": "e5241122177a01b4",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "links": [
            "848db27cdf1e0a80"
        ],
        "x": 1035,
        "y": 640,
        "wires": [
            [
                "2b9951ef824a13b8"
            ]
        ]
    },
    {
        "id": "57f21486ecbe9e80",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "log update",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `update index=${msg.iState.index}`,\n    type: 'INFO',\n    message: `execute parameter: ${msg.payload}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 580,
        "wires": [
            [
                "3f5ef249699cd136"
            ]
        ]
    },
    {
        "id": "3f5ef249699cd136",
        "type": "subflow:8834afe330b03dfe",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "x": 1310,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "f3afba65791e9d67",
        "type": "link in",
        "z": "e0965f0491bf9519",
        "g": "ee7c5705691f6d75",
        "name": "",
        "links": [
            "848db27cdf1e0a80"
        ],
        "x": 1035,
        "y": 580,
        "wires": [
            [
                "57f21486ecbe9e80"
            ]
        ]
    },
    {
        "id": "3e6c39c4131056a5",
        "type": "comment",
        "z": "e0965f0491bf9519",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves // Function: Perform state changes to control activities and their flow ",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //\nFunction: Perform state changes to control activities and their flow ",
        "x": 430,
        "y": 40,
        "wires": []
    },
    {
        "id": "26219d5795cac3b6",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "fdb84df0786f49b1",
        "name": "STOP AND CLEAR",
        "func": "var keys = flow.keys();\nfor(var i=0;i<keys.length;i++){\n    flow.set(keys[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1100,
        "wires": [
            [
                "613a52da24c365cf"
            ]
        ]
    },
    {
        "id": "72b433048218a730",
        "type": "inject",
        "z": "e0965f0491bf9519",
        "g": "fdb84df0786f49b1",
        "name": "Emergency - STOP -",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1100,
        "wires": [
            [
                "769315f8b386288d"
            ]
        ]
    },
    {
        "id": "613a52da24c365cf",
        "type": "debug",
        "z": "e0965f0491bf9519",
        "g": "fdb84df0786f49b1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1cf6d9c1bc9113b6",
        "type": "function",
        "z": "e0965f0491bf9519",
        "g": "fdb84df0786f49b1",
        "name": "Mount stop parameters",
        "func": "var query_machine_stop =\n(\n`\nUPDATE ${flow.get(\"TABLE_PARAMS\")}\nSET active = '0'\nWHERE active = 1;\n`\n)\nmsg.topic = query_machine_stop\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1100,
        "wires": [
            [
                "2cdd64f4def93059"
            ]
        ]
    },
    {
        "id": "2cdd64f4def93059",
        "type": "mysql",
        "z": "e0965f0491bf9519",
        "g": "fdb84df0786f49b1",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 910,
        "y": 1100,
        "wires": [
            [
                "26219d5795cac3b6"
            ]
        ]
    },
    {
        "id": "0a3e5fa469089aa5",
        "type": "comment",
        "z": "e0965f0491bf9519",
        "g": "fdb84df0786f49b1",
        "name": "Emergency - STOP -",
        "info": "",
        "x": 130,
        "y": 1040,
        "wires": []
    },
    {
        "id": "769315f8b386288d",
        "type": "change",
        "z": "e0965f0491bf9519",
        "g": "fdb84df0786f49b1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "RPA_ON",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1100,
        "wires": [
            [
                "1cf6d9c1bc9113b6"
            ]
        ]
    },
    {
        "id": "aeede10a6d6c91c2",
        "type": "function",
        "z": "6d8c566ec5f87da8",
        "name": "Set Url GET",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + env.get(\"RPA_SERVICENOW_GET_INCIDENTS\")\nmsg.url = path\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "02d90a3cabedb04a"
            ]
        ]
    },
    {
        "id": "c5718b03da54fe35",
        "type": "change",
        "z": "6d8c566ec5f87da8",
        "name": "Capture List Incidents",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.result",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "total_incidents_consult",
                "pt": "flow",
                "to": "headers.x-total-count",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 140,
        "wires": [
            [
                "b2372ca2b924e9ed"
            ]
        ]
    },
    {
        "id": "36e57b298cc3c146",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "4db6bd9a36688a48",
                "1830323177a363c6"
            ],
            [
                "d83ff715be0e4425"
            ]
        ]
    },
    {
        "id": "4db6bd9a36688a48",
        "type": "function",
        "z": "6d8c566ec5f87da8",
        "name": "Mount Insert incidents",
        "func": "var insert_incidents =\n(\n`insert into tab_incidents \n(\nsys_id,\nsys_created_on,\nnumber,\nstate,\npriority,\nassignment_group,\nshort_description,\ndescription\n) values\n(\n'${msg.payload.sys_id}',\nSTR_TO_DATE('${msg.payload.sys_created_on}', \"%d-%m-%Y %H:%i:%s\"),\n'${msg.payload.number}',\n'${msg.payload.state.replace(/['\"]/g,\"\")}',\n'${msg.payload.priority.replace(/['\"]/g,\"\")}',\n'${msg.payload.assignment_group.replace(/['\"]/g,\"\")}',\n'${msg.payload.short_description.replace(/['\"]/g,\"\")}',\n'${msg.payload.description.replace(/['\"]/g,\"\")}'\n)`\n)\nmsg.topic = insert_incidents\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 420,
        "wires": [
            [
                "f4425a84e8dfdf23"
            ]
        ]
    },
    {
        "id": "b9bb7ea8091fd029",
        "type": "inject",
        "z": "6d8c566ec5f87da8",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "aef87d699e3b8653"
            ]
        ]
    },
    {
        "id": "aef87d699e3b8653",
        "type": "change",
        "z": "6d8c566ec5f87da8",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_incidents_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "get_incidents_sn",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_incidents_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "aeede10a6d6c91c2"
            ]
        ]
    },
    {
        "id": "a2e12f935b0238e1",
        "type": "switch",
        "z": "6d8c566ec5f87da8",
        "name": "Check status API GET SN",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 160,
        "wires": [
            [
                "c5718b03da54fe35"
            ],
            [
                "75f3912521087e82"
            ]
        ]
    },
    {
        "id": "df5178c4b35d9cb1",
        "type": "switch",
        "z": "6d8c566ec5f87da8",
        "name": "Exist incident?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "36e57b298cc3c146",
                "9da9d28083bca41a"
            ],
            []
        ]
    },
    {
        "id": "b2372ca2b924e9ed",
        "type": "link out",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "mode": "link",
        "links": [
            "8c8c7198af4bd94e"
        ],
        "x": 1345,
        "y": 140,
        "wires": []
    },
    {
        "id": "8c8c7198af4bd94e",
        "type": "link in",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "links": [
            "b2372ca2b924e9ed"
        ],
        "x": 35,
        "y": 280,
        "wires": [
            [
                "df5178c4b35d9cb1"
            ]
        ]
    },
    {
        "id": "15b7e491cb6ed803",
        "type": "subflow:8834afe330b03dfe",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "x": 630,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9da9d28083bca41a",
        "type": "function",
        "z": "6d8c566ec5f87da8",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "15b7e491cb6ed803"
            ]
        ]
    },
    {
        "id": "296845ecf7f46ba8",
        "type": "subflow:8834afe330b03dfe",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "x": 1310,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "75f3912521087e82",
        "type": "function",
        "z": "6d8c566ec5f87da8",
        "name": "LOG ERROR GET API",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'ERROR',\n    message: `ERROR IN GET API SERVICE-NOW`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "296845ecf7f46ba8"
            ]
        ]
    },
    {
        "id": "1830323177a363c6",
        "type": "function",
        "z": "6d8c566ec5f87da8",
        "name": "LOG INSERT INCIDENT",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.payload.number}`,\n    type: 'INFO',\n    message: `Inserting incident:${msg.payload.number}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 340,
        "wires": [
            [
                "44717a869c49401d"
            ]
        ]
    },
    {
        "id": "44717a869c49401d",
        "type": "subflow:8834afe330b03dfe",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "x": 630,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "d83ff715be0e4425",
        "type": "function",
        "z": "6d8c566ec5f87da8",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 560,
        "wires": [
            [
                "558133557f655195"
            ]
        ]
    },
    {
        "id": "558133557f655195",
        "type": "subflow:8834afe330b03dfe",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "x": 610,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6fb53c530fc581af",
        "type": "subflow:8834afe330b03dfe",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "x": 590,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d6e3dc01cc8ec631",
        "type": "function",
        "z": "6d8c566ec5f87da8",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 680,
        "wires": [
            [
                "6fb53c530fc581af"
            ]
        ]
    },
    {
        "id": "3fd25d3978718607",
        "type": "catch",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 680,
        "wires": [
            [
                "d6e3dc01cc8ec631"
            ]
        ]
    },
    {
        "id": "f4425a84e8dfdf23",
        "type": "mysql",
        "z": "6d8c566ec5f87da8",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 670,
        "y": 420,
        "wires": [
            [
                "36e57b298cc3c146"
            ]
        ]
    },
    {
        "id": "02d90a3cabedb04a",
        "type": "subflow:31d3ae1201a194fd",
        "z": "6d8c566ec5f87da8",
        "name": "",
        "x": 680,
        "y": 160,
        "wires": [
            [
                "a2e12f935b0238e1"
            ]
        ]
    },
    {
        "id": "e0a7ab622eb38b88",
        "type": "comment",
        "z": "6d8c566ec5f87da8",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 210,
        "y": 80,
        "wires": []
    },
    {
        "id": "f5a8bc694c8e460a",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "Set Url PUT",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/table/incident/${String(msg.parameters.updatestatus.sys_id)}`\nu_rpa = 'running'\nmsg.url = path\nmsg.method = 'PUT'\nmsg.payload = `{\"u_rpa\": \"${u_rpa}\"}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 380,
        "wires": [
            [
                "44960ed5e6c7a089"
            ]
        ]
    },
    {
        "id": "eb034d6d149024b1",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "b9b511f9b20ddfbd"
            ],
            [
                "a85621adbe062677"
            ]
        ]
    },
    {
        "id": "7668f50a6d5e3c65",
        "type": "switch",
        "z": "e66a861ba662bbf5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "552c82b24d80f63c"
            ],
            [
                "fba8bc53a086d30a"
            ]
        ]
    },
    {
        "id": "fc8d417d08fb7f0e",
        "type": "inject",
        "z": "e66a861ba662bbf5",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "1707023c168a20c2"
            ]
        ]
    },
    {
        "id": "1707023c168a20c2",
        "type": "change",
        "z": "e66a861ba662bbf5",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_incidents",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_incidents_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_incidents_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "update_urpa_sn",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "331096dd582901a2"
            ]
        ]
    },
    {
        "id": "c50c9a3c4d4275ce",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 60,
        "wires": [
            [
                "9089cc06f1adadd2"
            ]
        ]
    },
    {
        "id": "4f69d965a7a03395",
        "type": "switch",
        "z": "e66a861ba662bbf5",
        "name": "Exist incident?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 140,
        "wires": [
            [
                "c50c9a3c4d4275ce",
                "32c933642153d990"
            ],
            []
        ]
    },
    {
        "id": "d5681970425e556c",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "LOG update",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.payload.number}`,\n    type: 'INFO',\n    message: `updating incident: ${msg.payload.number}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            [
                "88b54d7be3167897"
            ]
        ]
    },
    {
        "id": "89d4533f156ec5be",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "UPDATE STATUS TO running",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.payload.sys_id}`,\n    status: 'running',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 280,
        "wires": [
            [
                "45f4ee70c9f92d2d"
            ]
        ]
    },
    {
        "id": "552c82b24d80f63c",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "UPDATE STATUS TO sucess",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameters.updatestatus.sys_id}`,\n    status: 'success',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 360,
        "wires": [
            [
                "ebb33a24184dcae6"
            ]
        ]
    },
    {
        "id": "cd30836bdab8708e",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 520,
        "wires": [
            [
                "3da2f743c035c60e"
            ]
        ]
    },
    {
        "id": "32c933642153d990",
        "type": "link out",
        "z": "e66a861ba662bbf5",
        "name": "",
        "mode": "link",
        "links": [
            "8bea6e894ff22d81"
        ],
        "x": 1215,
        "y": 140,
        "wires": []
    },
    {
        "id": "8bea6e894ff22d81",
        "type": "link in",
        "z": "e66a861ba662bbf5",
        "name": "",
        "links": [
            "32c933642153d990",
            "15938c3b67942642"
        ],
        "x": 55,
        "y": 280,
        "wires": [
            [
                "eb034d6d149024b1"
            ]
        ]
    },
    {
        "id": "dae1c7b3769bd837",
        "type": "link out",
        "z": "e66a861ba662bbf5",
        "name": "",
        "mode": "link",
        "links": [
            "b9ecb631cc7a51f7"
        ],
        "x": 1285,
        "y": 280,
        "wires": []
    },
    {
        "id": "b9ecb631cc7a51f7",
        "type": "link in",
        "z": "e66a861ba662bbf5",
        "name": "",
        "links": [
            "dae1c7b3769bd837"
        ],
        "x": 85,
        "y": 380,
        "wires": [
            [
                "f5a8bc694c8e460a"
            ]
        ]
    },
    {
        "id": "15938c3b67942642",
        "type": "link out",
        "z": "e66a861ba662bbf5",
        "name": "",
        "mode": "link",
        "links": [
            "8bea6e894ff22d81"
        ],
        "x": 1275,
        "y": 360,
        "wires": []
    },
    {
        "id": "794c211306e4a4b5",
        "type": "link in",
        "z": "e66a861ba662bbf5",
        "name": "",
        "links": [
            "b9b511f9b20ddfbd"
        ],
        "x": 255,
        "y": 200,
        "wires": [
            [
                "d5681970425e556c"
            ]
        ]
    },
    {
        "id": "b9b511f9b20ddfbd",
        "type": "link out",
        "z": "e66a861ba662bbf5",
        "name": "",
        "mode": "link",
        "links": [
            "794c211306e4a4b5",
            "1f74febfbdc5f022"
        ],
        "x": 305,
        "y": 260,
        "wires": []
    },
    {
        "id": "1f74febfbdc5f022",
        "type": "link in",
        "z": "e66a861ba662bbf5",
        "name": "",
        "links": [
            "b9b511f9b20ddfbd"
        ],
        "x": 575,
        "y": 280,
        "wires": [
            [
                "89d4533f156ec5be"
            ]
        ]
    },
    {
        "id": "a85621adbe062677",
        "type": "link out",
        "z": "e66a861ba662bbf5",
        "name": "",
        "mode": "link",
        "links": [
            "81720ddd3aa5749c"
        ],
        "x": 305,
        "y": 300,
        "wires": []
    },
    {
        "id": "81720ddd3aa5749c",
        "type": "link in",
        "z": "e66a861ba662bbf5",
        "name": "",
        "links": [
            "a85621adbe062677"
        ],
        "x": 355,
        "y": 520,
        "wires": [
            [
                "cd30836bdab8708e"
            ]
        ]
    },
    {
        "id": "fba8bc53a086d30a",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "LOG ERROR",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameters.updatestatus.sys_id}`,\n    type: 'ERROR',\n    message: `ERROR PUT SERVICE-NOW`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 420,
        "wires": [
            [
                "a392b82415f4aae0",
                "4c7bd049c151ad08"
            ]
        ]
    },
    {
        "id": "4c7bd049c151ad08",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "UPDATE STATUS TO ERROR",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameters.updatestatus.sys_id}`,\n    status: 'runtime_error',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 420,
        "wires": [
            [
                "06fdfe7a4dcd47d8"
            ]
        ]
    },
    {
        "id": "331096dd582901a2",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "Mount select incidents",
        "func": "var query_incidents =\n(\n`SELECT sys_id,number,action,status\nFROM ${flow.get(\"TABLE_CONTROL\")}\nWHERE  action = '${flow.get(\"TASK\")}'\nAND status = 'wait_execution';\n`\n)\nmsg.topic = query_incidents\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 140,
        "wires": [
            [
                "03bdde260012139e"
            ]
        ]
    },
    {
        "id": "e06b7de74fca2bc7",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 740,
        "wires": [
            [
                "40428d79187d277d"
            ]
        ]
    },
    {
        "id": "dcdad3b9109cdade",
        "type": "catch",
        "z": "e66a861ba662bbf5",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 680,
        "wires": [
            [
                "e06b7de74fca2bc7",
                "03b1a3ba80947745"
            ]
        ]
    },
    {
        "id": "ef729adf910141ad",
        "type": "function",
        "z": "e66a861ba662bbf5",
        "name": "UPDATE STATUS TO process_error",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")   \n  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameters.updatestatus.sys_id}`,\n    status: 'runtime_error',\n    task: flow.get(\"TASK\"),\n    error_description: `${error_message}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 640,
        "wires": [
            [
                "53de2563fa4c1174"
            ]
        ]
    },
    {
        "id": "03b1a3ba80947745",
        "type": "switch",
        "z": "e66a861ba662bbf5",
        "name": "",
        "property": "msg.parameters.updatestatus.sys_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 640,
        "wires": [
            [
                "ef729adf910141ad"
            ]
        ]
    },
    {
        "id": "88b54d7be3167897",
        "type": "subflow:8834afe330b03dfe",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3da2f743c035c60e",
        "type": "subflow:8834afe330b03dfe",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 630,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "40428d79187d277d",
        "type": "subflow:8834afe330b03dfe",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 690,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "a392b82415f4aae0",
        "type": "subflow:8834afe330b03dfe",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "4c7bd049c151ad08"
            ]
        ]
    },
    {
        "id": "9089cc06f1adadd2",
        "type": "subflow:8834afe330b03dfe",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 1330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "45f4ee70c9f92d2d",
        "type": "subflow:3ac118e5391c2942",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "dae1c7b3769bd837"
            ]
        ]
    },
    {
        "id": "ebb33a24184dcae6",
        "type": "subflow:3ac118e5391c2942",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "15938c3b67942642"
            ]
        ]
    },
    {
        "id": "06fdfe7a4dcd47d8",
        "type": "subflow:3ac118e5391c2942",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 1550,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "53de2563fa4c1174",
        "type": "subflow:3ac118e5391c2942",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 1050,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "03bdde260012139e",
        "type": "mysql",
        "z": "e66a861ba662bbf5",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 830,
        "y": 140,
        "wires": [
            [
                "4f69d965a7a03395"
            ]
        ]
    },
    {
        "id": "44960ed5e6c7a089",
        "type": "subflow:31d3ae1201a194fd",
        "z": "e66a861ba662bbf5",
        "name": "",
        "x": 440,
        "y": 380,
        "wires": [
            [
                "7668f50a6d5e3c65"
            ]
        ]
    },
    {
        "id": "5b379d2aac5acbab",
        "type": "comment",
        "z": "e66a861ba662bbf5",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "2378125e44a9b1ce",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "d1c95fc1605030a2",
        "name": "Loop For incident",
        "x": 290,
        "y": 340,
        "wires": [
            [
                "6dafd91da7b960a4"
            ],
            [
                "657d3c6c71c888ba"
            ]
        ]
    },
    {
        "id": "e515891f83bf7857",
        "type": "switch",
        "z": "d1c95fc1605030a2",
        "name": "Exist idGlobo",
        "property": "msg.parameter.description",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "([A-Za-z0-9]{8}[-][A-Za-z0-9]{4}[-][A-Za-z0-9]{4}[-][A-Za-z0-9]{4}[-][A-Za-z0-9]{12})",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 440,
        "wires": [
            [
                "28a85a9f9ad47084"
            ],
            [
                "fa29e8f27f1e6cca"
            ]
        ]
    },
    {
        "id": "28a85a9f9ad47084",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "Capture GlobalID",
        "func": "var regex = /([A-Za-z0-9]{8}[-][A-Za-z0-9]{4}[-][A-Za-z0-9]{4}[-][A-Za-z0-9]{4}[-][A-Za-z0-9]{12})/g\nvar globoid = msg.parameter.description.match(regex)\nmsg.payload = globoid\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 420,
        "wires": [
            [
                "8c55156caf7715d1"
            ]
        ]
    },
    {
        "id": "81b13d6c5241a9a9",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "d1c95fc1605030a2",
        "name": "Loop For globalID",
        "env": [
            {
                "name": "iterator_level",
                "value": "1",
                "type": "num"
            }
        ],
        "x": 310,
        "y": 620,
        "wires": [
            [
                "342bd3858214b53a"
            ],
            [
                "ed86b384b79f6a6f"
            ]
        ]
    },
    {
        "id": "2ca812e74c2f605a",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "MountInsertGloboID",
        "func": "var update_glive_consult = (`\nINSERT INTO rpa_consult_system_aux(\nsys_id,\ngloboid,\naction,\nstatus\n)\nVALUES(\n'${msg.parameter.sys_id}',\n'${msg.payload}',\n'post_userinfo_glive_sn',\n'wait_execution');\n`)\nmsg.topic = update_glive_consult\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 620,
        "wires": [
            [
                "cab27a0357111a22",
                "414c1234d106fed9"
            ]
        ]
    },
    {
        "id": "e163be3887955c93",
        "type": "inject",
        "z": "d1c95fc1605030a2",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "e332981ef3012514"
            ]
        ]
    },
    {
        "id": "e332981ef3012514",
        "type": "change",
        "z": "d1c95fc1605030a2",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_incidents",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_incidents_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_incidents_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "find_globoid_description",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 180,
        "wires": [
            [
                "a9340567fda4f3e2"
            ]
        ]
    },
    {
        "id": "a9340567fda4f3e2",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "Mount select incidents",
        "func": "var query_incidents =\n(\n`SELECT ti.sys_id,ti.number ,ti.description\nFROM tab_incidents ti\nINNER JOIN rpa_incidents ri on ti.number  = ri.number\nWHERE ti.number  = ri.number  \nAND ri.action = '${flow.get(\"TASK\")}'\nAND ri.status = 'wait_execution';\n`\n)\nmsg.topic = query_incidents\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "a9bfbe443fb8d3e7"
            ]
        ]
    },
    {
        "id": "1cef6f0f94d72f32",
        "type": "switch",
        "z": "d1c95fc1605030a2",
        "name": "Exist incident?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1100,
        "y": 180,
        "wires": [
            [
                "c1bf8efbfdfefe82",
                "472187d3e9680acf"
            ],
            []
        ]
    },
    {
        "id": "472187d3e9680acf",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "195a7d42d613129b"
        ],
        "x": 1275,
        "y": 160,
        "wires": []
    },
    {
        "id": "c1bf8efbfdfefe82",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 100,
        "wires": [
            [
                "65bc914370f91da7"
            ]
        ]
    },
    {
        "id": "195a7d42d613129b",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "472187d3e9680acf",
            "62f696fc1c102f7d",
            "b3fc40ce5d168a30"
        ],
        "x": 125,
        "y": 340,
        "wires": [
            [
                "2378125e44a9b1ce"
            ]
        ]
    },
    {
        "id": "5ab600c34ecd1637",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "LOG searching",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.number}`,\n    type: 'INFO',\n    message: `searching for globid in incident:${msg.parameter.number}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 240,
        "wires": [
            [
                "3d82fe7f91af9c69"
            ]
        ]
    },
    {
        "id": "70e315ee04407108",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "UPDATE STATUS TO running",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    status: 'running',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 360,
        "wires": [
            [
                "44af71ebc0355d69"
            ]
        ]
    },
    {
        "id": "44af71ebc0355d69",
        "type": "subflow:3ac118e5391c2942",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 1170,
        "y": 360,
        "wires": [
            [
                "430c8c9c7e6c7093"
            ]
        ]
    },
    {
        "id": "e8552c62fa5565fa",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "69df8722e0b952e2",
            "7d8e7550d85d0bc6"
        ],
        "x": 635,
        "y": 300,
        "wires": []
    },
    {
        "id": "69df8722e0b952e2",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "e8552c62fa5565fa"
        ],
        "x": 245,
        "y": 240,
        "wires": [
            [
                "5ab600c34ecd1637"
            ]
        ]
    },
    {
        "id": "7d8e7550d85d0bc6",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "e8552c62fa5565fa"
        ],
        "x": 715,
        "y": 360,
        "wires": [
            [
                "70e315ee04407108"
            ]
        ]
    },
    {
        "id": "430c8c9c7e6c7093",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "ad98ae09db4d0543"
        ],
        "x": 1325,
        "y": 360,
        "wires": []
    },
    {
        "id": "ad98ae09db4d0543",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "430c8c9c7e6c7093"
        ],
        "x": 125,
        "y": 440,
        "wires": [
            [
                "e515891f83bf7857"
            ]
        ]
    },
    {
        "id": "8c55156caf7715d1",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "6c6c9f6a600b5539"
        ],
        "x": 795,
        "y": 420,
        "wires": []
    },
    {
        "id": "6c6c9f6a600b5539",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "8c55156caf7715d1",
            "a28b7982e60f03fa"
        ],
        "x": 135,
        "y": 620,
        "wires": [
            [
                "81b13d6c5241a9a9"
            ]
        ]
    },
    {
        "id": "a28b7982e60f03fa",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "6c6c9f6a600b5539"
        ],
        "x": 1225,
        "y": 620,
        "wires": []
    },
    {
        "id": "ed86b384b79f6a6f",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "098f9573610c4e19"
        ],
        "x": 445,
        "y": 660,
        "wires": []
    },
    {
        "id": "fa29e8f27f1e6cca",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "UPDATE STATUS TO process_error",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    status: 'process_error',\n    task: flow.get(\"TASK\"),\n    error_description: \"globoid not found\"\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 480,
        "wires": [
            [
                "ea369f9bf93caea5"
            ]
        ]
    },
    {
        "id": "ea369f9bf93caea5",
        "type": "subflow:3ac118e5391c2942",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 970,
        "y": 480,
        "wires": [
            [
                "b3fc40ce5d168a30"
            ]
        ]
    },
    {
        "id": "657d3c6c71c888ba",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "3a881f76811c5186"
        ],
        "x": 445,
        "y": 360,
        "wires": []
    },
    {
        "id": "7d52af5ea0d7f213",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "1145d31ce7294ac3"
            ]
        ]
    },
    {
        "id": "89f9e64ea7e52221",
        "type": "catch",
        "z": "d1c95fc1605030a2",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 360,
        "y": 980,
        "wires": [
            [
                "7d52af5ea0d7f213",
                "520fac6c3cddc042"
            ]
        ]
    },
    {
        "id": "6694e62594ccde2e",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "UPDATE STATUS TO process_error",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")   \n  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    status: 'runtime_error',\n    task: flow.get(\"TASK\"),\n    error_description: `${error_message}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 940,
        "wires": [
            [
                "fdb503449fb2bc04"
            ]
        ]
    },
    {
        "id": "fdb503449fb2bc04",
        "type": "subflow:3ac118e5391c2942",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 1190,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "793a1879cce26b06",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 860,
        "wires": [
            [
                "ec1a02f1ec7ad880"
            ]
        ]
    },
    {
        "id": "3a881f76811c5186",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "657d3c6c71c888ba"
        ],
        "x": 455,
        "y": 860,
        "wires": [
            [
                "793a1879cce26b06"
            ]
        ]
    },
    {
        "id": "425e143b2cf652a5",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "UPDATE STATUS TO sucess",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    status: 'success',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 760,
        "wires": [
            [
                "bbfd83a93d1d1087"
            ]
        ]
    },
    {
        "id": "bbfd83a93d1d1087",
        "type": "subflow:3ac118e5391c2942",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 850,
        "y": 760,
        "wires": [
            [
                "62f696fc1c102f7d"
            ]
        ]
    },
    {
        "id": "098f9573610c4e19",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "ed86b384b79f6a6f"
        ],
        "x": 385,
        "y": 760,
        "wires": [
            [
                "425e143b2cf652a5"
            ]
        ]
    },
    {
        "id": "62f696fc1c102f7d",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "195a7d42d613129b"
        ],
        "x": 995,
        "y": 760,
        "wires": []
    },
    {
        "id": "cab27a0357111a22",
        "type": "function",
        "z": "d1c95fc1605030a2",
        "name": "LOG inserting",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.number}`,\n    type: 'INFO',\n    message: `inserting globid:${msg.payload}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 560,
        "wires": [
            [
                "9596696282bfdb9d"
            ]
        ]
    },
    {
        "id": "342bd3858214b53a",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "7624bf3916455b10",
            "b9c25662b4aa6f78"
        ],
        "x": 445,
        "y": 600,
        "wires": []
    },
    {
        "id": "b9c25662b4aa6f78",
        "type": "link in",
        "z": "d1c95fc1605030a2",
        "name": "",
        "links": [
            "342bd3858214b53a"
        ],
        "x": 555,
        "y": 620,
        "wires": [
            [
                "2ca812e74c2f605a"
            ]
        ]
    },
    {
        "id": "520fac6c3cddc042",
        "type": "switch",
        "z": "d1c95fc1605030a2",
        "name": "",
        "property": "msg.parameter.sys_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 940,
        "wires": [
            [
                "6694e62594ccde2e"
            ]
        ]
    },
    {
        "id": "6dafd91da7b960a4",
        "type": "change",
        "z": "d1c95fc1605030a2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "msg.parameter.sys_id",
                "pt": "msg",
                "to": "msg.payload.sys_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "msg.parameter.number",
                "pt": "msg",
                "to": "msg.payload.number",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "msg.parameter.description",
                "pt": "msg",
                "to": "msg.payload.description",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 300,
        "wires": [
            [
                "e8552c62fa5565fa"
            ]
        ]
    },
    {
        "id": "b3fc40ce5d168a30",
        "type": "link out",
        "z": "d1c95fc1605030a2",
        "name": "",
        "mode": "link",
        "links": [
            "195a7d42d613129b"
        ],
        "x": 1125,
        "y": 480,
        "wires": []
    },
    {
        "id": "65bc914370f91da7",
        "type": "subflow:8834afe330b03dfe",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 1270,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3d82fe7f91af9c69",
        "type": "subflow:8834afe330b03dfe",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 570,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9596696282bfdb9d",
        "type": "subflow:8834afe330b03dfe",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 1190,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ec1a02f1ec7ad880",
        "type": "subflow:8834afe330b03dfe",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 870,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1145d31ce7294ac3",
        "type": "subflow:8834afe330b03dfe",
        "z": "d1c95fc1605030a2",
        "name": "",
        "x": 810,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a9bfbe443fb8d3e7",
        "type": "mysql",
        "z": "d1c95fc1605030a2",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 890,
        "y": 180,
        "wires": [
            [
                "1cef6f0f94d72f32"
            ]
        ]
    },
    {
        "id": "414c1234d106fed9",
        "type": "mysql",
        "z": "d1c95fc1605030a2",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "a28b7982e60f03fa"
            ]
        ]
    },
    {
        "id": "578a9226ef2ab244",
        "type": "comment",
        "z": "d1c95fc1605030a2",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 230,
        "y": 100,
        "wires": []
    },
    {
        "id": "aba61331b875827d",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "47f0885872b75352",
        "name": "",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "16a8a9b2d4a4ab7f"
            ],
            [
                "b62dc899d2075c61"
            ]
        ]
    },
    {
        "id": "16a8a9b2d4a4ab7f",
        "type": "change",
        "z": "47f0885872b75352",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameter.sys_id",
                "pt": "msg",
                "to": "payload.sys_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "parameter.globoid",
                "pt": "msg",
                "to": "payload.globoid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "abf323202d865c5c"
            ]
        ]
    },
    {
        "id": "8a7af6f52ec1b598",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "Set Url GET",
        "func": "var globoid = msg.parameter.globoid\npath = env.get(\"RPA_SALES_SUPPORT_GET_GLIVE_URL\")\nmsg.url = path + globoid\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 400,
        "wires": [
            [
                "5eca097dd093e0c8"
            ]
        ]
    },
    {
        "id": "4f31f6012a71ef51",
        "type": "switch",
        "z": "47f0885872b75352",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "a76e2a8052aa0fb9"
            ],
            [
                "ddfa2c6b71db0dcf"
            ]
        ]
    },
    {
        "id": "82600097f4a7f6d0",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "Set Url POST",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/attachment/file?file_name=RPA_ExportGliveUser_${msg.parameter.globoid}.json&table_name=incident&table_sys_id=`\nmsg.url = path + msg.parameter.sys_id\nmsg.method = 'POST'\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 540,
        "wires": [
            [
                "fdab124f9dff2b71"
            ]
        ]
    },
    {
        "id": "50f1ddf2be55b5bc",
        "type": "switch",
        "z": "47f0885872b75352",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "201",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 540,
        "wires": [
            [
                "1fbb5538c5df53d9"
            ],
            [
                "bca0c34ccffe38e8"
            ]
        ]
    },
    {
        "id": "1ecdfde533e6a6ad",
        "type": "inject",
        "z": "47f0885872b75352",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "bd9e9768489e9a2a"
            ]
        ]
    },
    {
        "id": "bd9e9768489e9a2a",
        "type": "change",
        "z": "47f0885872b75352",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_consult_system_aux",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "post_userinfo_glive_sn",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "8f178790863d07fd"
            ]
        ]
    },
    {
        "id": "8f178790863d07fd",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "Mount select global id",
        "func": "var query_globalid =\n(\n`SELECT sys_id,globoid\nFROM rpa_consult_system_aux\nWHERE action = '${flow.get(\"TASK\")}'\nAND status = 'wait_execution';\n`\n)\nmsg.topic = query_globalid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 160,
        "wires": [
            [
                "c1f7b8d81a4d03e0"
            ]
        ]
    },
    {
        "id": "ff75b83a785d2c52",
        "type": "switch",
        "z": "47f0885872b75352",
        "name": "Exist incident?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 160,
        "wires": [
            [
                "bf88ae9997f7fdca",
                "b50db0e842a7e745"
            ],
            []
        ]
    },
    {
        "id": "bf88ae9997f7fdca",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 80,
        "wires": [
            [
                "c837c66ab8755987"
            ]
        ]
    },
    {
        "id": "b50db0e842a7e745",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "4255f471a80d2a7d"
        ],
        "x": 1215,
        "y": 160,
        "wires": []
    },
    {
        "id": "4255f471a80d2a7d",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "b50db0e842a7e745",
            "ddfa2c6b71db0dcf",
            "52f00374acb1c00b"
        ],
        "x": 105,
        "y": 300,
        "wires": [
            [
                "aba61331b875827d"
            ]
        ]
    },
    {
        "id": "421cb8234df68c13",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "LOG get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `get globoid:${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 240,
        "wires": [
            [
                "dc5216f2b57793be"
            ]
        ]
    },
    {
        "id": "5eca097dd093e0c8",
        "type": "subflow:0230d1167fca2ffe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 990,
        "y": 400,
        "wires": [
            [
                "4f31f6012a71ef51"
            ]
        ]
    },
    {
        "id": "94f049cd3b963c5a",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "UPDATE STATUS TO running",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'running',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 400,
        "wires": [
            [
                "5ec1c975ceb1bd49"
            ]
        ]
    },
    {
        "id": "5ec1c975ceb1bd49",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "47f0885872b75352",
        "name": "",
        "x": 550,
        "y": 400,
        "wires": [
            [
                "8a7af6f52ec1b598"
            ]
        ]
    },
    {
        "id": "abf323202d865c5c",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "d1b82b52bf68ada7",
            "f4239a5c272b62bd"
        ],
        "x": 565,
        "y": 280,
        "wires": []
    },
    {
        "id": "d1b82b52bf68ada7",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "abf323202d865c5c"
        ],
        "x": 355,
        "y": 240,
        "wires": [
            [
                "421cb8234df68c13"
            ]
        ]
    },
    {
        "id": "f4239a5c272b62bd",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "abf323202d865c5c"
        ],
        "x": 65,
        "y": 400,
        "wires": [
            [
                "94f049cd3b963c5a"
            ]
        ]
    },
    {
        "id": "1fbb5538c5df53d9",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "4ab32e5de9c6ddff"
        ],
        "x": 735,
        "y": 520,
        "wires": []
    },
    {
        "id": "a76e2a8052aa0fb9",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "1e041489a8304af2",
            "5c766a70d6875941"
        ],
        "x": 1305,
        "y": 380,
        "wires": []
    },
    {
        "id": "1e041489a8304af2",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "a76e2a8052aa0fb9"
        ],
        "x": 75,
        "y": 540,
        "wires": [
            [
                "82600097f4a7f6d0"
            ]
        ]
    },
    {
        "id": "5cb5023770548594",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "LOG error get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.sys_id}`,\n    type: 'ERROR',\n    message: `ERROR TO GET GLOBOID: ${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 480,
        "wires": [
            [
                "8c256dee9aab53dd"
            ]
        ]
    },
    {
        "id": "d13bdf46c8a513d0",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "ddfa2c6b71db0dcf"
        ],
        "x": 1255,
        "y": 480,
        "wires": [
            [
                "5cb5023770548594"
            ]
        ]
    },
    {
        "id": "ddfa2c6b71db0dcf",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "d13bdf46c8a513d0",
            "2d411c202b85a2b2",
            "4255f471a80d2a7d"
        ],
        "x": 1305,
        "y": 420,
        "wires": []
    },
    {
        "id": "2d411c202b85a2b2",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "ddfa2c6b71db0dcf"
        ],
        "x": 1255,
        "y": 540,
        "wires": [
            [
                "a81d65698f114dc3"
            ]
        ]
    },
    {
        "id": "4188fa0ad3c27dda",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "47f0885872b75352",
        "name": "",
        "x": 1730,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "6ae554383862f109",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "LOG attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `attachment file:RPA_ExportGliveUser_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "b20f9d5cbb8b7b90"
            ]
        ]
    },
    {
        "id": "5c766a70d6875941",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "a76e2a8052aa0fb9"
        ],
        "x": 1055,
        "y": 340,
        "wires": [
            [
                "6ae554383862f109"
            ]
        ]
    },
    {
        "id": "bca0c34ccffe38e8",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "96f2419c125fa972"
        ],
        "x": 735,
        "y": 560,
        "wires": []
    },
    {
        "id": "96f2419c125fa972",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "bca0c34ccffe38e8"
        ],
        "x": 795,
        "y": 560,
        "wires": [
            [
                "ef2a834f94103aa4"
            ]
        ]
    },
    {
        "id": "ef2a834f94103aa4",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "LOG error attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.sys_id}`,\n    type: 'ERROR',\n    message: `attachment file:RPA_ExportGliveUser_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 560,
        "wires": [
            [
                "8d3d78d8511513a7"
            ]
        ]
    },
    {
        "id": "4ab32e5de9c6ddff",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "1fbb5538c5df53d9"
        ],
        "x": 355,
        "y": 660,
        "wires": [
            [
                "d5b971aba9825ba6"
            ]
        ]
    },
    {
        "id": "d5b971aba9825ba6",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "UPDATE STATUS TO success",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'success',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 660,
        "wires": [
            [
                "80ce3129dd6e443d"
            ]
        ]
    },
    {
        "id": "80ce3129dd6e443d",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "47f0885872b75352",
        "name": "",
        "x": 830,
        "y": 660,
        "wires": [
            [
                "52f00374acb1c00b"
            ]
        ]
    },
    {
        "id": "52f00374acb1c00b",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "4255f471a80d2a7d"
        ],
        "x": 1005,
        "y": 660,
        "wires": []
    },
    {
        "id": "e08514b3a390276c",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 760,
        "wires": [
            [
                "b09af54d1aa953ec"
            ]
        ]
    },
    {
        "id": "f9543026e5567097",
        "type": "link in",
        "z": "47f0885872b75352",
        "name": "",
        "links": [
            "b62dc899d2075c61"
        ],
        "x": 465,
        "y": 760,
        "wires": [
            [
                "e08514b3a390276c"
            ]
        ]
    },
    {
        "id": "b62dc899d2075c61",
        "type": "link out",
        "z": "47f0885872b75352",
        "name": "",
        "mode": "link",
        "links": [
            "f9543026e5567097"
        ],
        "x": 325,
        "y": 340,
        "wires": []
    },
    {
        "id": "c502e0841ffc7ccf",
        "type": "catch",
        "z": "47f0885872b75352",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 300,
        "y": 940,
        "wires": [
            [
                "59a7fac927e6c119",
                "8048a716c5846993"
            ]
        ]
    },
    {
        "id": "8048a716c5846993",
        "type": "switch",
        "z": "47f0885872b75352",
        "name": "",
        "property": "msg.parameter.sys_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 900,
        "wires": [
            [
                "220351cbdece4c31"
            ]
        ]
    },
    {
        "id": "59a7fac927e6c119",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1000,
        "wires": [
            [
                "1d208c3d50a8ca4a"
            ]
        ]
    },
    {
        "id": "220351cbdece4c31",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "UPDATE STATUS TO error",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")   \n  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'runtime_error',\n    task: flow.get(\"TASK\"),\n    error_description: `${error_message}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 900,
        "wires": [
            [
                "8fafb31195e4f8ce"
            ]
        ]
    },
    {
        "id": "8fafb31195e4f8ce",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "47f0885872b75352",
        "name": "",
        "x": 1090,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a81d65698f114dc3",
        "type": "function",
        "z": "47f0885872b75352",
        "name": "UPDATE STATUS TO error",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'process_error',\n    task: flow.get(\"TASK\"),\n    error_description: `ERROR TO GET GLOBOID: ${msg.parameter.globoid}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 540,
        "wires": [
            [
                "4188fa0ad3c27dda"
            ]
        ]
    },
    {
        "id": "c837c66ab8755987",
        "type": "subflow:8834afe330b03dfe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 1230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b20f9d5cbb8b7b90",
        "type": "subflow:8834afe330b03dfe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 1350,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "dc5216f2b57793be",
        "type": "subflow:8834afe330b03dfe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 670,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8c256dee9aab53dd",
        "type": "subflow:8834afe330b03dfe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 1590,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "8d3d78d8511513a7",
        "type": "subflow:8834afe330b03dfe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 1130,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b09af54d1aa953ec",
        "type": "subflow:8834afe330b03dfe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 770,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "1d208c3d50a8ca4a",
        "type": "subflow:8834afe330b03dfe",
        "z": "47f0885872b75352",
        "name": "",
        "x": 770,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "c1f7b8d81a4d03e0",
        "type": "mysql",
        "z": "47f0885872b75352",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "ff75b83a785d2c52"
            ]
        ]
    },
    {
        "id": "fdab124f9dff2b71",
        "type": "subflow:31d3ae1201a194fd",
        "z": "47f0885872b75352",
        "name": "",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "50f1ddf2be55b5bc"
            ]
        ]
    },
    {
        "id": "0d6c6c2ec2cc81f6",
        "type": "comment",
        "z": "47f0885872b75352",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "3cf4c0f5c160bb91",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "c9a3060d35de6567"
            ],
            [
                "459f1d22a4196b36"
            ]
        ]
    },
    {
        "id": "c9a3060d35de6567",
        "type": "change",
        "z": "cc16a76a903a3abe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameter.sys_id",
                "pt": "msg",
                "to": "payload.sys_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "parameter.globoid",
                "pt": "msg",
                "to": "payload.globoid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "fcb89f890b5ba2c5"
            ]
        ]
    },
    {
        "id": "f4016f47ef4074ed",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "Set Url GET",
        "func": "var globoid = msg.parameter.globoid\npath = env.get(\"RPA_SALES_SUPPORT_GET_GLIVE_URL\")\nmsg.url = path + globoid + '/services'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 400,
        "wires": [
            [
                "f833d489343ecb50"
            ]
        ]
    },
    {
        "id": "c8920afc69bc7468",
        "type": "switch",
        "z": "cc16a76a903a3abe",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "2f6aab7093642d5a"
            ],
            [
                "a44fb10e86471608"
            ]
        ]
    },
    {
        "id": "7bb7829bc746096d",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "Set Url POST",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/attachment/file?file_name=RPA_ExportGliveServices_${msg.parameter.globoid}.json&table_name=incident&table_sys_id=`\nmsg.url = path + msg.parameter.sys_id\nmsg.method = 'POST'\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 540,
        "wires": [
            [
                "9f75606be01fd7b3"
            ]
        ]
    },
    {
        "id": "1b3b61a94ee73704",
        "type": "switch",
        "z": "cc16a76a903a3abe",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "201",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 540,
        "wires": [
            [
                "9f6547e38b4d5fa2"
            ],
            [
                "ebeea6e70a1675df"
            ]
        ]
    },
    {
        "id": "f66ce293323fdfa2",
        "type": "inject",
        "z": "cc16a76a903a3abe",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "e1cdf08c114d6637"
            ]
        ]
    },
    {
        "id": "e1cdf08c114d6637",
        "type": "change",
        "z": "cc16a76a903a3abe",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_consult_system_aux",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "post_userservices_glive_sn",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "56750d276da1479d"
            ]
        ]
    },
    {
        "id": "56750d276da1479d",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "Mount select global id",
        "func": "var query_globalid =\n(\n`SELECT sys_id,globoid\nFROM rpa_consult_system_aux\nWHERE action = '${flow.get(\"TASK\")}'\nAND status = 'wait_execution';\n`\n)\nmsg.topic = query_globalid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 160,
        "wires": [
            [
                "1aa87e65f481542c"
            ]
        ]
    },
    {
        "id": "54aeca5683b345b6",
        "type": "switch",
        "z": "cc16a76a903a3abe",
        "name": "Exist incident?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 160,
        "wires": [
            [
                "00d1809b61da28e8",
                "b247743c30e13f4a"
            ],
            []
        ]
    },
    {
        "id": "00d1809b61da28e8",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 80,
        "wires": [
            [
                "a4d06e0265b83030"
            ]
        ]
    },
    {
        "id": "b247743c30e13f4a",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "705f1125aae4b84c"
        ],
        "x": 1215,
        "y": 160,
        "wires": []
    },
    {
        "id": "705f1125aae4b84c",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "b247743c30e13f4a",
            "a44fb10e86471608",
            "f1d6b5efde6ce621"
        ],
        "x": 105,
        "y": 300,
        "wires": [
            [
                "3cf4c0f5c160bb91"
            ]
        ]
    },
    {
        "id": "1feff394425efdad",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "LOG get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `get globoid:${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 240,
        "wires": [
            [
                "60082d74fe48fec5"
            ]
        ]
    },
    {
        "id": "f833d489343ecb50",
        "type": "subflow:0230d1167fca2ffe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 990,
        "y": 400,
        "wires": [
            [
                "c8920afc69bc7468"
            ]
        ]
    },
    {
        "id": "8e4fa12f2e811c19",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "UPDATE STATUS TO running",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'running',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 400,
        "wires": [
            [
                "82a01aed8cbfcf2d"
            ]
        ]
    },
    {
        "id": "fcb89f890b5ba2c5",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "34bf78b89c39f0c8",
            "02d4b2a57eacf4ce"
        ],
        "x": 565,
        "y": 280,
        "wires": []
    },
    {
        "id": "34bf78b89c39f0c8",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "fcb89f890b5ba2c5"
        ],
        "x": 355,
        "y": 240,
        "wires": [
            [
                "1feff394425efdad"
            ]
        ]
    },
    {
        "id": "02d4b2a57eacf4ce",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "fcb89f890b5ba2c5"
        ],
        "x": 65,
        "y": 400,
        "wires": [
            [
                "8e4fa12f2e811c19"
            ]
        ]
    },
    {
        "id": "9f6547e38b4d5fa2",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "d6af3eb51835c851"
        ],
        "x": 735,
        "y": 520,
        "wires": []
    },
    {
        "id": "2f6aab7093642d5a",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "4ecb861471b8b9fe",
            "5dd4373f5062f514"
        ],
        "x": 1305,
        "y": 380,
        "wires": []
    },
    {
        "id": "4ecb861471b8b9fe",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "2f6aab7093642d5a"
        ],
        "x": 75,
        "y": 540,
        "wires": [
            [
                "7bb7829bc746096d"
            ]
        ]
    },
    {
        "id": "f0f79bb30da28428",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "LOG error get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.sys_id}`,\n    type: 'ERROR',\n    message: `ERROR TO GET GLOBOID: ${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 480,
        "wires": [
            [
                "b0521c6dd75da4ab"
            ]
        ]
    },
    {
        "id": "40b9106ca8799eb4",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "a44fb10e86471608"
        ],
        "x": 1255,
        "y": 480,
        "wires": [
            [
                "f0f79bb30da28428"
            ]
        ]
    },
    {
        "id": "a44fb10e86471608",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "40b9106ca8799eb4",
            "214b205f065e5da2",
            "705f1125aae4b84c"
        ],
        "x": 1305,
        "y": 420,
        "wires": []
    },
    {
        "id": "214b205f065e5da2",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "a44fb10e86471608"
        ],
        "x": 1255,
        "y": 540,
        "wires": [
            [
                "187738bd5a772dd6"
            ]
        ]
    },
    {
        "id": "e0d68e90bcbf03be",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "LOG attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `attachment file:RPA_ExportGliveServices_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "341eae416f8a2231"
            ]
        ]
    },
    {
        "id": "5dd4373f5062f514",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "2f6aab7093642d5a"
        ],
        "x": 1055,
        "y": 340,
        "wires": [
            [
                "e0d68e90bcbf03be"
            ]
        ]
    },
    {
        "id": "ebeea6e70a1675df",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "a66581120012b75b"
        ],
        "x": 735,
        "y": 560,
        "wires": []
    },
    {
        "id": "a66581120012b75b",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "ebeea6e70a1675df"
        ],
        "x": 795,
        "y": 560,
        "wires": [
            [
                "461e5bb84acb0f13"
            ]
        ]
    },
    {
        "id": "461e5bb84acb0f13",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "LOG error attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.sys_id}`,\n    type: 'ERROR',\n    message: `attachment file:ExportGliveServices_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 560,
        "wires": [
            [
                "375811912a563d5d"
            ]
        ]
    },
    {
        "id": "d6af3eb51835c851",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "9f6547e38b4d5fa2"
        ],
        "x": 355,
        "y": 660,
        "wires": [
            [
                "5d3e9f068b85ad8a"
            ]
        ]
    },
    {
        "id": "5d3e9f068b85ad8a",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "UPDATE STATUS TO success",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'success',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 660,
        "wires": [
            [
                "b4690a663cb469c1"
            ]
        ]
    },
    {
        "id": "f1d6b5efde6ce621",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "705f1125aae4b84c"
        ],
        "x": 1005,
        "y": 660,
        "wires": []
    },
    {
        "id": "d85d2fb9d0901338",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 760,
        "wires": [
            [
                "1fc25859a2cb751f"
            ]
        ]
    },
    {
        "id": "c0067f3ec1f08095",
        "type": "link in",
        "z": "cc16a76a903a3abe",
        "name": "",
        "links": [
            "459f1d22a4196b36"
        ],
        "x": 465,
        "y": 760,
        "wires": [
            [
                "d85d2fb9d0901338"
            ]
        ]
    },
    {
        "id": "459f1d22a4196b36",
        "type": "link out",
        "z": "cc16a76a903a3abe",
        "name": "",
        "mode": "link",
        "links": [
            "c0067f3ec1f08095"
        ],
        "x": 325,
        "y": 340,
        "wires": []
    },
    {
        "id": "663b1d9c598529aa",
        "type": "catch",
        "z": "cc16a76a903a3abe",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 300,
        "y": 940,
        "wires": [
            [
                "96299ea38fb6c390",
                "7803e6a7d19c5dd5"
            ]
        ]
    },
    {
        "id": "7803e6a7d19c5dd5",
        "type": "switch",
        "z": "cc16a76a903a3abe",
        "name": "",
        "property": "msg.parameter.sys_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 900,
        "wires": [
            [
                "6be0e0bede36c2ef"
            ]
        ]
    },
    {
        "id": "96299ea38fb6c390",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1000,
        "wires": [
            [
                "1012fd030caec73c"
            ]
        ]
    },
    {
        "id": "6be0e0bede36c2ef",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "UPDATE STATUS TO error",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")   \n  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'runtime_error',\n    task: flow.get(\"TASK\"),\n    error_description: `${error_message}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 900,
        "wires": [
            [
                "5d848917ac23982d"
            ]
        ]
    },
    {
        "id": "187738bd5a772dd6",
        "type": "function",
        "z": "cc16a76a903a3abe",
        "name": "UPDATE STATUS TO error",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'process_error',\n    task: flow.get(\"TASK\"),\n    error_description: `ERROR TO GET GLOBOID: ${msg.parameter.globoid}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 540,
        "wires": [
            [
                "7acb95505ccd224c"
            ]
        ]
    },
    {
        "id": "a4d06e0265b83030",
        "type": "subflow:8834afe330b03dfe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 1230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "341eae416f8a2231",
        "type": "subflow:8834afe330b03dfe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 1350,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "60082d74fe48fec5",
        "type": "subflow:8834afe330b03dfe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1fc25859a2cb751f",
        "type": "subflow:8834afe330b03dfe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 770,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "1012fd030caec73c",
        "type": "subflow:8834afe330b03dfe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 750,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "375811912a563d5d",
        "type": "subflow:8834afe330b03dfe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 1150,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b0521c6dd75da4ab",
        "type": "subflow:8834afe330b03dfe",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 1610,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "82a01aed8cbfcf2d",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 530,
        "y": 400,
        "wires": [
            [
                "f4016f47ef4074ed"
            ]
        ]
    },
    {
        "id": "7acb95505ccd224c",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 1710,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "b4690a663cb469c1",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 830,
        "y": 660,
        "wires": [
            [
                "f1d6b5efde6ce621"
            ]
        ]
    },
    {
        "id": "5d848917ac23982d",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 1090,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1aa87e65f481542c",
        "type": "mysql",
        "z": "cc16a76a903a3abe",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "54aeca5683b345b6"
            ]
        ]
    },
    {
        "id": "9f75606be01fd7b3",
        "type": "subflow:31d3ae1201a194fd",
        "z": "cc16a76a903a3abe",
        "name": "",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "1b3b61a94ee73704"
            ]
        ]
    },
    {
        "id": "716aab2f54190898",
        "type": "comment",
        "z": "cc16a76a903a3abe",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 230,
        "y": 100,
        "wires": []
    },
    {
        "id": "f04e61cff39e8bfd",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "2572dd6ff3047867"
            ],
            [
                "7aecf75af27574ac"
            ]
        ]
    },
    {
        "id": "2572dd6ff3047867",
        "type": "change",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameter.sys_id",
                "pt": "msg",
                "to": "payload.sys_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "parameter.globoid",
                "pt": "msg",
                "to": "payload.globoid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 560,
        "wires": [
            [
                "619c85e1987344a7"
            ]
        ]
    },
    {
        "id": "2ad0137f3f12660d",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "Set Url POST",
        "func": "msg.headers = {\n    'Authorization':'Bearer ' + global.get('sn_access_token')\n}\npath = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/attachment/file?file_name=RPA_ExportBRM_${msg.parameter.globoid}.json&table_name=incident&table_sys_id=`\nmsg.url = path + msg.parameter.sys_id\nmsg.method = 'POST'\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 840,
        "wires": [
            [
                "e304f998d414496a"
            ]
        ]
    },
    {
        "id": "d3594d3ff20e5520",
        "type": "switch",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "201",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 840,
        "wires": [
            [
                "f0a68206c6813f59"
            ],
            [
                "4e414cf83124752a"
            ]
        ]
    },
    {
        "id": "34d3be0ab4ce3c40",
        "type": "inject",
        "z": "e4c3a86ff1dc480d",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "f7183603c931a895"
            ]
        ]
    },
    {
        "id": "f7183603c931a895",
        "type": "change",
        "z": "e4c3a86ff1dc480d",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_consult_system_aux",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "post_userservices_brm_sn",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 420,
        "wires": [
            [
                "bbdda82451d3227a"
            ]
        ]
    },
    {
        "id": "bbdda82451d3227a",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "Mount select global id",
        "func": "var query_globalid =\n(\n`SELECT sys_id,globoid\nFROM rpa_consult_system_aux\nWHERE action = '${flow.get(\"TASK\")}'\nAND status = 'wait_execution';\n`\n)\nmsg.topic = query_globalid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 420,
        "wires": [
            [
                "34751eaba6e2e62e"
            ]
        ]
    },
    {
        "id": "772a77646fd977f4",
        "type": "switch",
        "z": "e4c3a86ff1dc480d",
        "name": "Exist incident?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 420,
        "wires": [
            [
                "e1d584cae2d6c76f",
                "1e25a0baa1bd5968"
            ],
            []
        ]
    },
    {
        "id": "e1d584cae2d6c76f",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "c945c942b3a57ea4"
            ]
        ]
    },
    {
        "id": "1e25a0baa1bd5968",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "5bcc26af4cbfce2e"
        ],
        "x": 1235,
        "y": 400,
        "wires": []
    },
    {
        "id": "5bcc26af4cbfce2e",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "1e25a0baa1bd5968",
            "b2262b6cae5b2187",
            "d82624d2fab3e818"
        ],
        "x": 65,
        "y": 560,
        "wires": [
            [
                "f04e61cff39e8bfd"
            ]
        ]
    },
    {
        "id": "559351705f49bb08",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "LOG get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `get globoid:${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 500,
        "wires": [
            [
                "fee8846e5db77706"
            ]
        ]
    },
    {
        "id": "acad502d55ac57e6",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "UPDATE STATUS TO running",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'running',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "e4db711594ce4034"
            ]
        ]
    },
    {
        "id": "619c85e1987344a7",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "13024558d4a4c045",
            "66f7f437d868392b"
        ],
        "x": 525,
        "y": 540,
        "wires": []
    },
    {
        "id": "13024558d4a4c045",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "619c85e1987344a7"
        ],
        "x": 315,
        "y": 500,
        "wires": [
            [
                "559351705f49bb08"
            ]
        ]
    },
    {
        "id": "66f7f437d868392b",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "619c85e1987344a7"
        ],
        "x": 25,
        "y": 660,
        "wires": [
            [
                "acad502d55ac57e6"
            ]
        ]
    },
    {
        "id": "f0a68206c6813f59",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "9415ad55a4f75840"
        ],
        "x": 735,
        "y": 820,
        "wires": []
    },
    {
        "id": "a1ca5a69f9fc85eb",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "ccbaddd0a2166e04",
            "494b2964b1bca43d"
        ],
        "x": 1195,
        "y": 640,
        "wires": []
    },
    {
        "id": "ccbaddd0a2166e04",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "a1ca5a69f9fc85eb"
        ],
        "x": 25,
        "y": 840,
        "wires": [
            [
                "2ad0137f3f12660d"
            ]
        ]
    },
    {
        "id": "b2262b6cae5b2187",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "554a93f567bbf35e",
            "5bcc26af4cbfce2e",
            "76f305ae662d3fad",
            "694ddac131d3b810",
            "799ca82171e4775a"
        ],
        "x": 1185,
        "y": 680,
        "wires": []
    },
    {
        "id": "0b698da901b817eb",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "LOG attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `attachment file:RPA_ExportBRM_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 600,
        "wires": [
            [
                "81635bef79d4c487"
            ]
        ]
    },
    {
        "id": "494b2964b1bca43d",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "a1ca5a69f9fc85eb"
        ],
        "x": 1015,
        "y": 600,
        "wires": [
            [
                "0b698da901b817eb"
            ]
        ]
    },
    {
        "id": "4e414cf83124752a",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "e5eb2b22fcd49cbd",
            "b63d9603926bec88"
        ],
        "x": 735,
        "y": 860,
        "wires": []
    },
    {
        "id": "e5eb2b22fcd49cbd",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "4e414cf83124752a"
        ],
        "x": 855,
        "y": 900,
        "wires": [
            [
                "d320fcdcccfb6f2d"
            ]
        ]
    },
    {
        "id": "d320fcdcccfb6f2d",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "LOG error attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.sys_id}`,\n    type: 'ERROR',\n    message: `attachment file:RPA_ExportBRM_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 900,
        "wires": [
            [
                "6fa11101f7a805c4"
            ]
        ]
    },
    {
        "id": "9415ad55a4f75840",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "9b73d605bcd49825",
            "f0a68206c6813f59"
        ],
        "x": 305,
        "y": 980,
        "wires": [
            [
                "2867ba5502834a6d"
            ]
        ]
    },
    {
        "id": "2867ba5502834a6d",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "UPDATE STATUS TO success",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'success',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 980,
        "wires": [
            [
                "8fb79abfa5acc436"
            ]
        ]
    },
    {
        "id": "d82624d2fab3e818",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "5bcc26af4cbfce2e"
        ],
        "x": 955,
        "y": 980,
        "wires": []
    },
    {
        "id": "c8ec6faa08faad6c",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1080,
        "wires": [
            [
                "7c71302910bef642"
            ]
        ]
    },
    {
        "id": "68e4905099775763",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "7aecf75af27574ac"
        ],
        "x": 415,
        "y": 1080,
        "wires": [
            [
                "c8ec6faa08faad6c"
            ]
        ]
    },
    {
        "id": "7aecf75af27574ac",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "mode": "link",
        "links": [
            "68e4905099775763"
        ],
        "x": 285,
        "y": 600,
        "wires": []
    },
    {
        "id": "c945c942b3a57ea4",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1230,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "81635bef79d4c487",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1310,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "fee8846e5db77706",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 610,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "7c71302910bef642",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 720,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "6fa11101f7a805c4",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1210,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "e4db711594ce4034",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "98f5472218dba585"
            ]
        ]
    },
    {
        "id": "8fb79abfa5acc436",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 780,
        "y": 980,
        "wires": [
            [
                "d82624d2fab3e818"
            ]
        ]
    },
    {
        "id": "34751eaba6e2e62e",
        "type": "mysql",
        "z": "e4c3a86ff1dc480d",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 850,
        "y": 420,
        "wires": [
            [
                "772a77646fd977f4"
            ]
        ]
    },
    {
        "id": "82242f69313f77f2",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "UPDATE STATUS TO error",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'process_error',\n    task: flow.get(\"TASK\"),\n    error_description: `NOT RETURN BRM:${msg.parameter.globoid}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 840,
        "wires": [
            [
                "ed419ebb8dd4beb6"
            ]
        ]
    },
    {
        "id": "e66cdcf5dd3bb944",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "LOG get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `NOT RETURN BRM:${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 780,
        "wires": [
            [
                "dcaa29e797352087"
            ]
        ]
    },
    {
        "id": "76f305ae662d3fad",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "b2262b6cae5b2187"
        ],
        "x": 1145,
        "y": 780,
        "wires": [
            [
                "e66cdcf5dd3bb944"
            ]
        ]
    },
    {
        "id": "694ddac131d3b810",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "b2262b6cae5b2187"
        ],
        "x": 1125,
        "y": 840,
        "wires": [
            [
                "82242f69313f77f2"
            ]
        ]
    },
    {
        "id": "dcaa29e797352087",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1470,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ed419ebb8dd4beb6",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1570,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "98f5472218dba585",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "Set Url GET",
        "func": "path = env.get(\"RPA_BRM_DATA_URL\") + '/GetBRM'\nmsg.url = path\nmsg.method = 'POST'\nmsg.payload = `{ \n        \"FunctionName\" : \"PIN.FC_GET_SERVICES_INFO_BY_GLOBO_ID\",\n        \"InputParameters\":  [\n           { \"Name\": \"GloboId\",\n             \"Value\": \"${msg.parameter.globoid}\" }                 \n        ]\n  }`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 660,
        "wires": [
            [
                "efa55dcfc36cf808"
            ]
        ]
    },
    {
        "id": "80a0cb798ac66c6e",
        "type": "switch",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 660,
        "wires": [
            [
                "a1ca5a69f9fc85eb"
            ],
            [
                "b2262b6cae5b2187"
            ]
        ]
    },
    {
        "id": "30810b2a08524273",
        "type": "catch",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 1220,
        "wires": [
            [
                "aa94ebaf7c4ea843",
                "62e5387cfde4b5a6"
            ]
        ]
    },
    {
        "id": "62e5387cfde4b5a6",
        "type": "switch",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "property": "msg.parameter.sys_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 1180,
        "wires": [
            [
                "73410b2398fb2436"
            ]
        ]
    },
    {
        "id": "aa94ebaf7c4ea843",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "c70f408a18a6c6a4"
            ]
        ]
    },
    {
        "id": "96809b8e8d7fc495",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "UPDATE STATUS TO error",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")   \n  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'runtime_error',\n    task: flow.get(\"TASK\"),\n    error_description: `${error_message}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1180,
        "wires": [
            [
                "f118f8c0d75b5608"
            ]
        ]
    },
    {
        "id": "c70f408a18a6c6a4",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 670,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "f118f8c0d75b5608",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1210,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "73410b2398fb2436",
        "type": "switch",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "property": "msg.parameter.globoid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "96809b8e8d7fc495"
            ]
        ]
    },
    {
        "id": "a4332beb12149570",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "Set Url PUT",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/table/incident/`\nmsg.url = path + msg.parameter.sys_id\nmsg.method = 'PUT'\nmsg.payload = \n`\n{\n    \"comments\": \"NOT RETURN BRM:${msg.parameter.globoid}\"\n}\n`\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 740,
        "wires": [
            [
                "83fecc0bd9cb57a7"
            ]
        ]
    },
    {
        "id": "799ca82171e4775a",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "b2262b6cae5b2187"
        ],
        "x": 1175,
        "y": 740,
        "wires": [
            [
                "a4332beb12149570"
            ]
        ]
    },
    {
        "id": "4fcd33ad2c477de3",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "name": "UPDATE STATUS TO error",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'process_error',\n    task: flow.get(\"TASK\"),\n    error_description: `attachment file:RPA_ExportBRM_${msg.parameter.globoid}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 940,
        "wires": [
            [
                "54bcacf1226e426f"
            ]
        ]
    },
    {
        "id": "54bcacf1226e426f",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1290,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "b63d9603926bec88",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "links": [
            "4e414cf83124752a"
        ],
        "x": 845,
        "y": 940,
        "wires": [
            [
                "4fcd33ad2c477de3"
            ]
        ]
    },
    {
        "id": "e304f998d414496a",
        "type": "subflow:31d3ae1201a194fd",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 380,
        "y": 840,
        "wires": [
            [
                "d3594d3ff20e5520"
            ]
        ]
    },
    {
        "id": "83fecc0bd9cb57a7",
        "type": "subflow:31d3ae1201a194fd",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 1500,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "efa55dcfc36cf808",
        "type": "subflow:eb03a259e83e8e17",
        "z": "e4c3a86ff1dc480d",
        "name": "",
        "x": 910,
        "y": 660,
        "wires": [
            [
                "80a0cb798ac66c6e"
            ]
        ]
    },
    {
        "id": "3eb76c21e13b5c97",
        "type": "inject",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "",
        "props": [],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "d2d40d6d3eb69fbb"
            ]
        ]
    },
    {
        "id": "60413e8f249ead48",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "Set Url GET",
        "func": "path = env.get(\"RPA_BRM_BACKSTAGE_URL\") + `/token`\nmsg.url = path\n\nmsg.headers = {\n'content-type':'application/x-www-form-urlencoded'\n}\n\nmsg.payload = {\n'grant_type': 'client_credentials',\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 160,
        "wires": [
            [
                "36908efad8caa40f"
            ]
        ]
    },
    {
        "id": "36908efad8caa40f",
        "type": "http request",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "POST TOKEN",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "senderr": false,
        "x": 660,
        "y": 160,
        "wires": [
            [
                "04760674b8064c20"
            ]
        ]
    },
    {
        "id": "da314a6871f8acf7",
        "type": "switch",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "Exist token?",
        "property": "payload.access_token",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "1bb86dd10fbf8a50"
            ],
            [
                "ed05b18a9f98600a"
            ]
        ]
    },
    {
        "id": "1bb86dd10fbf8a50",
        "type": "change",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brm_backstage_access_token",
                "pt": "global",
                "to": "payload.access_token",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d2d40d6d3eb69fbb",
        "type": "change",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_consult_system_aux",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "post_userservices_brm_sn",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "60413e8f249ead48"
            ]
        ]
    },
    {
        "id": "1e66bd33d6bc82ee",
        "type": "comment",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "Emergencial alter in Deploy ver 1.",
        "info": "",
        "x": 170,
        "y": 120,
        "wires": []
    },
    {
        "id": "04760674b8064c20",
        "type": "switch",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 160,
        "wires": [
            [
                "da314a6871f8acf7"
            ],
            [
                "8c6b7f3e055161d6"
            ]
        ]
    },
    {
        "id": "4e9c51ad97ee55a8",
        "type": "function",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "LOG ERROR",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `ERROR GET TOKEN`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "83de2e27cb035e6c"
            ]
        ]
    },
    {
        "id": "83de2e27cb035e6c",
        "type": "subflow:8834afe330b03dfe",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "",
        "x": 1430,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8c6b7f3e055161d6",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "",
        "mode": "link",
        "links": [
            "c0e8cd22c3e4404b"
        ],
        "x": 1005,
        "y": 180,
        "wires": []
    },
    {
        "id": "ed05b18a9f98600a",
        "type": "link out",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "",
        "mode": "link",
        "links": [
            "c0e8cd22c3e4404b"
        ],
        "x": 1215,
        "y": 140,
        "wires": []
    },
    {
        "id": "c0e8cd22c3e4404b",
        "type": "link in",
        "z": "e4c3a86ff1dc480d",
        "g": "146dfa41d7d323a1",
        "name": "",
        "links": [
            "ed05b18a9f98600a",
            "8c6b7f3e055161d6"
        ],
        "x": 1065,
        "y": 240,
        "wires": [
            [
                "4e9c51ad97ee55a8"
            ]
        ]
    },
    {
        "id": "96c610f53db2b3ec",
        "type": "comment",
        "z": "e4c3a86ff1dc480d",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "350133a563db56e6",
        "type": "subflow:7bf8a2ce.ed32ac",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "64fca4a4ed44efe1"
            ],
            [
                "2da7b8be97fa5028"
            ]
        ]
    },
    {
        "id": "64fca4a4ed44efe1",
        "type": "change",
        "z": "469e5b1367b8d770",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameter.sys_id",
                "pt": "msg",
                "to": "payload.sys_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "parameter.globoid",
                "pt": "msg",
                "to": "payload.globoid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 280,
        "wires": [
            [
                "19128f367ecc84c4"
            ]
        ]
    },
    {
        "id": "43642fa0eb715314",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "Set Url POST",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/attachment/file?file_name=RPA_ExportSF_${msg.parameter.globoid}.json&table_name=incident&table_sys_id=`\nmsg.url = path + msg.parameter.sys_id\nmsg.method = 'POST'\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 540,
        "wires": [
            [
                "d66f5e193f61050b"
            ]
        ]
    },
    {
        "id": "f37bd04f02e33322",
        "type": "switch",
        "z": "469e5b1367b8d770",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "201",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 540,
        "wires": [
            [
                "69654e3d1b049f9e"
            ],
            [
                "dbf62c8c540e0ac3"
            ]
        ]
    },
    {
        "id": "343c857931b7e364",
        "type": "inject",
        "z": "469e5b1367b8d770",
        "name": "START",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "d8b215bdf9f184dd"
            ]
        ]
    },
    {
        "id": "d8b215bdf9f184dd",
        "type": "change",
        "z": "469e5b1367b8d770",
        "name": "START VARIABLES",
        "rules": [
            {
                "t": "set",
                "p": "TABLE_CONTROL",
                "pt": "flow",
                "to": "rpa_consult_system_aux",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_LOGS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_log",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TABLE_PARAMS",
                "pt": "flow",
                "to": "rpa_consult_system_aux_params",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TASK",
                "pt": "flow",
                "to": "post_userservices_sf_sn",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parameters.log",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "parameters.updatestatus",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 140,
        "wires": [
            [
                "5f69e6594fd32542"
            ]
        ]
    },
    {
        "id": "5f69e6594fd32542",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "Mount select global id",
        "func": "var query_globalid =\n(\n`SELECT sys_id,globoid\nFROM rpa_consult_system_aux\nWHERE action = '${flow.get(\"TASK\")}'\nAND status = 'wait_execution';\n`\n)\nmsg.topic = query_globalid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 140,
        "wires": [
            [
                "13f0fea286a33e77"
            ]
        ]
    },
    {
        "id": "2dd76054edc8792d",
        "type": "switch",
        "z": "469e5b1367b8d770",
        "name": "Exist incident?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 140,
        "wires": [
            [
                "acf9c697755d78bd",
                "8807a44db589abda"
            ],
            []
        ]
    },
    {
        "id": "acf9c697755d78bd",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "LOG START",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `START`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 60,
        "wires": [
            [
                "3dba917c328f7e43"
            ]
        ]
    },
    {
        "id": "8807a44db589abda",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "aa82772e69a1967e"
        ],
        "x": 1205,
        "y": 140,
        "wires": []
    },
    {
        "id": "aa82772e69a1967e",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "8807a44db589abda",
            "e9badb0b51b4c0ab",
            "9c109ea933cb658c"
        ],
        "x": 65,
        "y": 280,
        "wires": [
            [
                "350133a563db56e6"
            ]
        ]
    },
    {
        "id": "8d12d57a2909b8f4",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "LOG get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `get globoid:${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 220,
        "wires": [
            [
                "3fc24b48b3e1d371"
            ]
        ]
    },
    {
        "id": "3c110754a112cd7f",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "UPDATE STATUS TO running",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'running',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 380,
        "wires": [
            [
                "3646940a94c53b0e"
            ]
        ]
    },
    {
        "id": "19128f367ecc84c4",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "6e79bd8bcb60fc96",
            "c6e46df242c1cd6b"
        ],
        "x": 525,
        "y": 260,
        "wires": []
    },
    {
        "id": "6e79bd8bcb60fc96",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "19128f367ecc84c4"
        ],
        "x": 315,
        "y": 220,
        "wires": [
            [
                "8d12d57a2909b8f4"
            ]
        ]
    },
    {
        "id": "c6e46df242c1cd6b",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "19128f367ecc84c4"
        ],
        "x": 25,
        "y": 380,
        "wires": [
            [
                "3c110754a112cd7f"
            ]
        ]
    },
    {
        "id": "69654e3d1b049f9e",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "3e697447b4c85bc6"
        ],
        "x": 825,
        "y": 520,
        "wires": []
    },
    {
        "id": "6673d65fad71f3b5",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "f70fd64a614f4b84",
            "f9b050c77965de07"
        ],
        "x": 1225,
        "y": 360,
        "wires": []
    },
    {
        "id": "f70fd64a614f4b84",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "6673d65fad71f3b5"
        ],
        "x": 155,
        "y": 540,
        "wires": [
            [
                "43642fa0eb715314"
            ]
        ]
    },
    {
        "id": "e9badb0b51b4c0ab",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "554a93f567bbf35e",
            "aa82772e69a1967e",
            "f231e489496bd390",
            "6ab11346469c0092",
            "b1a08e85b221d298"
        ],
        "x": 1225,
        "y": 400,
        "wires": []
    },
    {
        "id": "ea92e81f3a170839",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "LOG attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `attachment file:RPA_ExportSF_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "90389a5f87f132ae"
            ]
        ]
    },
    {
        "id": "f9b050c77965de07",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "6673d65fad71f3b5"
        ],
        "x": 1015,
        "y": 320,
        "wires": [
            [
                "ea92e81f3a170839"
            ]
        ]
    },
    {
        "id": "dbf62c8c540e0ac3",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "6fb377af334d2d11",
            "def32bdd0c410cb0"
        ],
        "x": 825,
        "y": 560,
        "wires": []
    },
    {
        "id": "6fb377af334d2d11",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "dbf62c8c540e0ac3"
        ],
        "x": 885,
        "y": 600,
        "wires": [
            [
                "af3c1bfa82fb8721"
            ]
        ]
    },
    {
        "id": "af3c1bfa82fb8721",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "LOG error attachment",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.sys_id}`,\n    type: 'ERROR',\n    message: `attachment file:RPA_ExportSF_${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 600,
        "wires": [
            [
                "c8754f2e124e3bcd"
            ]
        ]
    },
    {
        "id": "3e697447b4c85bc6",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "b4d9563771a219a7",
            "69654e3d1b049f9e"
        ],
        "x": 315,
        "y": 760,
        "wires": [
            [
                "48974e6086d316f4"
            ]
        ]
    },
    {
        "id": "48974e6086d316f4",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "UPDATE STATUS TO success",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'success',\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 760,
        "wires": [
            [
                "b33f3dfcc8c0301e"
            ]
        ]
    },
    {
        "id": "9c109ea933cb658c",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "aa82772e69a1967e"
        ],
        "x": 965,
        "y": 760,
        "wires": []
    },
    {
        "id": "9501e2fad176a55f",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "LOG END",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: '',\n    type: 'INFO',\n    message: `END`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 860,
        "wires": [
            [
                "80e05e0bc7e9163f"
            ]
        ]
    },
    {
        "id": "52e9b3a900a64705",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "2da7b8be97fa5028"
        ],
        "x": 425,
        "y": 860,
        "wires": [
            [
                "9501e2fad176a55f"
            ]
        ]
    },
    {
        "id": "2da7b8be97fa5028",
        "type": "link out",
        "z": "469e5b1367b8d770",
        "name": "",
        "mode": "link",
        "links": [
            "52e9b3a900a64705"
        ],
        "x": 285,
        "y": 320,
        "wires": []
    },
    {
        "id": "3dba917c328f7e43",
        "type": "subflow:8834afe330b03dfe",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1210,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "90389a5f87f132ae",
        "type": "subflow:8834afe330b03dfe",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1310,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3fc24b48b3e1d371",
        "type": "subflow:8834afe330b03dfe",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 610,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "80e05e0bc7e9163f",
        "type": "subflow:8834afe330b03dfe",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 730,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "c8754f2e124e3bcd",
        "type": "subflow:8834afe330b03dfe",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1240,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "3646940a94c53b0e",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 490,
        "y": 380,
        "wires": [
            [
                "240841849e102ec8"
            ]
        ]
    },
    {
        "id": "b33f3dfcc8c0301e",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 790,
        "y": 760,
        "wires": [
            [
                "9c109ea933cb658c"
            ]
        ]
    },
    {
        "id": "13f0fea286a33e77",
        "type": "mysql",
        "z": "469e5b1367b8d770",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 830,
        "y": 140,
        "wires": [
            [
                "2dd76054edc8792d"
            ]
        ]
    },
    {
        "id": "dfdc6684f4c9bc2c",
        "type": "switch",
        "z": "469e5b1367b8d770",
        "name": "Exist sf?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "6673d65fad71f3b5"
            ],
            [
                "e9badb0b51b4c0ab"
            ]
        ]
    },
    {
        "id": "29d20f257475337b",
        "type": "catch",
        "z": "469e5b1367b8d770",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 960,
        "wires": [
            [
                "a75e6e7e781a6841",
                "214950b46966531c"
            ]
        ]
    },
    {
        "id": "214950b46966531c",
        "type": "switch",
        "z": "469e5b1367b8d770",
        "name": "",
        "property": "msg.parameter.sys_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 920,
        "wires": [
            [
                "64f069c9ccec8e59"
            ]
        ]
    },
    {
        "id": "a75e6e7e781a6841",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "LOG ERROR EXECUTE",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")  \n  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: ``,\n    type: 'ERROR',\n    message: `${error_message}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1020,
        "wires": [
            [
                "2760c74a706420ea"
            ]
        ]
    },
    {
        "id": "db0f11aef0806711",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "UPDATE STATUS TO error",
        "func": "error_message = String(msg.error.message).normalize('NFD').replace(/[\\u0300-\\u036f'\"]/g, \"\")   \n  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'runtime_error',\n    task: flow.get(\"TASK\"),\n    error_description: `${error_message}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 920,
        "wires": [
            [
                "a87cda123efb9a61"
            ]
        ]
    },
    {
        "id": "2760c74a706420ea",
        "type": "subflow:8834afe330b03dfe",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 610,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "a87cda123efb9a61",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1070,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "240841849e102ec8",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "",
        "func": "msg.query = `SELECT a.ProductCode, a.ProductFamily, a.EVA_Ato_de_Cancelamento__c, a.EVA_Canal_cancelamento__c, a.EVA_Canal_compra__c,\n   a.EVA_Cancelamento_Final_Ciclo__c, a.EVA_Data_Hora_da_compra__c, a.EVA_Data_Hora_de_cancelamento__c, a.EVA_Foi_Trial__c,\n   a.EVA_Forma_Cancelamento__c, a.EVA_Forma_pagamento__c, a.EVA_Motivo_Cancelamento__c, a.EVA_Motivo_da_suspensao__c, a.EVA_Oferta__c,\n   a.EVA_Periodo_Trial_Form__c, a.EVA_Preco__c, a.EVA_Produto_pai__c, a.EVA_Status_Integracao__c, a.EVA_Status_da_Cobranca__c,\n   a.EVA_Tipo_Cancelamento__c, a.EVA_Trial__c, a.EVA_Visivel_cesta__c, a.EVA_brmContaFaturaId__c, a.EVA_brmContaFaturaPagamentoId__c,\n   a.EVA_brmContaFaturaServicoId__c, a.Gift_card__c, a.EVA_Tipo_de_pedido__c, a.EVA_Caracteristica_Produto__c, a.EVA_Data_Reativacao__c,\n   a.EVA_Origem_Id__c, a.EVA_Data_da_Migracao__c, a.EVA_ID_Assinatura_Legado__c, a.EVA_Lote_Migracao__c, a.EVA_Data_Final_Gift_Card__c,\n   a.Data_convers_o_efetiva__c, a.EVA_Descricao_OrigemID__c, a.EVA_Tipo_de_aquisicao__c, a.EVA_Vencimento_Boleto__c,\n   a.EVA_Checkbox_Visivel_na_cesta__c, a.D2C_Justificativa_recompra__c, a.D2C_Liberar_Recompra__c, a.D2C_Moeda__c, a.D2C_OneTimeDiscountPrice__c,\n   a.D2C_Preco_Internacional__c, a.D2C_RecurringCalculatedPrice__c, a.D2C_RecurringCharge__c, a.D2C_RecurringDiscountPrice__c,\n   a.D2C_RecurringTotal__c, a.D2C_DataHora_Desistencia_Cancelamento__c, a.D2C_DataUltimaTrocaPagamento__c, a.EVA_Status_da_Assinatura__c,\n   a.D2C_DOM__c, b.Name, b.EVA_CPF__c, b.EVA_Email__c, b.EVA_GloboID__c, b.EVA_brmId__c, b.EVA_clienteValidadoSerasa__c,\n   b.EVA_dataUltimaConsultaSerasa__c, b.EVA_UltimoAno_Cartola__c, b.D2C_Pais_Autodeclarado__c, b.D2C_Pais_Geolocalizado__c,\n   b.D2C_Ano_de_Cancelamento_Cartola__c, b.D2C_Elegivel_promocao_ex_cartoleiro__c, b.DisneyActivationDate__c, b.DisneyActive__c,\n   b.D2C_hasAddon__c, b.D2C_ActivationDeezer__c, b.D2C_DeezerActivationDate__c, b.D2C_ActivationDiscovery__c, b.D2C_DiscoveryActivationDate__c\nFROM Asset a, Asset.Account b\nwhere b.Eva_GloboID__c = '${msg.parameter.globoid}'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 380,
        "wires": [
            [
                "0a871028a27eb6c0"
            ]
        ]
    },
    {
        "id": "0a871028a27eb6c0",
        "type": "soql",
        "z": "469e5b1367b8d770",
        "name": "RPA_SOQL_SF",
        "query": "",
        "connection": "7acce723d51c6064",
        "fetchAll": true,
        "returnJSON": true,
        "x": 900,
        "y": 380,
        "wires": [
            [
                "dfdc6684f4c9bc2c"
            ]
        ]
    },
    {
        "id": "1ad92b8b933bb2cc",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "UPDATE STATUS TO error",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'process_error',\n    task: flow.get(\"TASK\"),\n    error_description: `NOT RETURN SALES-FORCE:${msg.parameter.globoid}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 560,
        "wires": [
            [
                "5b775cb2cf3499d2"
            ]
        ]
    },
    {
        "id": "4023a0a19c812bfa",
        "type": "subflow:8834afe330b03dfe",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1450,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5b775cb2cf3499d2",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1550,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c4e5683895a321b5",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "LOG get globoid",
        "func": "  msg.parameters.log = {\n    table: flow.get(\"TABLE_LOGS\"),\n    key: `${msg.parameter.globoid}`,\n    type: 'INFO',\n    message: `NOT RETURN SALES-FORCE:${msg.parameter.globoid}`,\n    task: flow.get(\"TASK\")\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 500,
        "wires": [
            [
                "4023a0a19c812bfa"
            ]
        ]
    },
    {
        "id": "f231e489496bd390",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "e9badb0b51b4c0ab"
        ],
        "x": 1125,
        "y": 500,
        "wires": [
            [
                "c4e5683895a321b5"
            ]
        ]
    },
    {
        "id": "6ab11346469c0092",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "e9badb0b51b4c0ab"
        ],
        "x": 1105,
        "y": 560,
        "wires": [
            [
                "1ad92b8b933bb2cc"
            ]
        ]
    },
    {
        "id": "64f069c9ccec8e59",
        "type": "switch",
        "z": "469e5b1367b8d770",
        "name": "",
        "property": "msg.parameter.globoid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 920,
        "wires": [
            [
                "db0f11aef0806711"
            ]
        ]
    },
    {
        "id": "f6a69d2e03b56b3f",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "Set Url PUT",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/table/incident/`\nmsg.url = path + msg.parameter.sys_id\nmsg.method = 'PUT'\nmsg.payload = \n`\n{\n    \"comments\": \"NOT RETURN SALES-FORCE:${msg.parameter.globoid}\"\n}\n`\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 460,
        "wires": [
            [
                "cf8f42a6903c8a94"
            ]
        ]
    },
    {
        "id": "b1a08e85b221d298",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "e9badb0b51b4c0ab"
        ],
        "x": 1165,
        "y": 460,
        "wires": [
            [
                "f6a69d2e03b56b3f"
            ]
        ]
    },
    {
        "id": "a5f9d7fe5b897c0a",
        "type": "function",
        "z": "469e5b1367b8d770",
        "name": "UPDATE STATUS TO error",
        "func": "  msg.parameters.updatestatus = {\n    table: flow.get(\"TABLE_CONTROL\"),\n    sys_id: `${msg.parameter.sys_id}`,\n    globoid: `${msg.parameter.globoid}`,\n    status: 'process_error',\n    task: flow.get(\"TASK\"),\n    error_description: `attachment file:RPA_ExportSF_${msg.parameter.globoid}`\n  };\n  return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "e026680cf48ed57d"
            ]
        ]
    },
    {
        "id": "e026680cf48ed57d",
        "type": "subflow:16f3d73135fe8c4b",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1290,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "def32bdd0c410cb0",
        "type": "link in",
        "z": "469e5b1367b8d770",
        "name": "",
        "links": [
            "dbf62c8c540e0ac3"
        ],
        "x": 825,
        "y": 660,
        "wires": [
            [
                "a5f9d7fe5b897c0a"
            ]
        ]
    },
    {
        "id": "d66f5e193f61050b",
        "type": "subflow:31d3ae1201a194fd",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 520,
        "y": 540,
        "wires": [
            [
                "f37bd04f02e33322"
            ]
        ]
    },
    {
        "id": "cf8f42a6903c8a94",
        "type": "subflow:31d3ae1201a194fd",
        "z": "469e5b1367b8d770",
        "name": "",
        "x": 1500,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "6536b52c54407426",
        "type": "comment",
        "z": "469e5b1367b8d770",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "c4dfc3a0fe52d26b",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 480,
        "wires": []
    },
    {
        "id": "1cdfe8fb73ee49e0",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 860,
        "wires": []
    },
    {
        "id": "83dd6519a7bded1a",
        "type": "catch",
        "z": "c8a66f4349d507f0",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 480,
        "y": 860,
        "wires": [
            [
                "1cdfe8fb73ee49e0"
            ]
        ]
    },
    {
        "id": "679850255e86aefc",
        "type": "change",
        "z": "c8a66f4349d507f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameter.globoid",
                "pt": "msg",
                "to": "8f4fa71f-cf31-4dc2-8cec-b6177a4b90d0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 480,
        "wires": [
            [
                "d60d6927e68891c5"
            ]
        ]
    },
    {
        "id": "f99003f14f3c86d5",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "d308167b34b59908"
            ]
        ]
    },
    {
        "id": "d308167b34b59908",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "9b7e3576e7459846",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "477d3c1aa6b9b48b",
        "type": "change",
        "z": "c8a66f4349d507f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DBAAS_MYSQL_HOSTS",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 140,
        "wires": [
            [
                "9b7e3576e7459846"
            ]
        ]
    },
    {
        "id": "a9f0cb94503a3e6e",
        "type": "mysql",
        "z": "c8a66f4349d507f0",
        "mydb": "142e1a49012fa9bf",
        "name": "",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "7fb2816847feed1f"
            ]
        ]
    },
    {
        "id": "7fb2816847feed1f",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "75aea20c85a1f230",
        "type": "function",
        "z": "c8a66f4349d507f0",
        "name": "Mount select global id",
        "func": "var query_globalid =\n(\n`SELECT sys_id, number, insert_date\nFROM rpa_incidents\nLIMIT 1\n`\n)\nmsg.topic = query_globalid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 260,
        "wires": [
            [
                "a9f0cb94503a3e6e"
            ]
        ]
    },
    {
        "id": "20bd0f7a9c74c4dc",
        "type": "function",
        "z": "c8a66f4349d507f0",
        "name": "Set Url GET",
        "func": "var globoid = msg.parameter.globoid\npath = env.get(\"RPA_SALES_SUPPORT_GET_GLIVE_URL\")\nmsg.url = path + globoid\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 360,
        "wires": [
            [
                "922ff7d2cb92ea3f"
            ]
        ]
    },
    {
        "id": "922ff7d2cb92ea3f",
        "type": "subflow:0230d1167fca2ffe",
        "z": "c8a66f4349d507f0",
        "name": "",
        "x": 870,
        "y": 360,
        "wires": [
            [
                "0b2f4986f9c3e4d1"
            ]
        ]
    },
    {
        "id": "0b2f4986f9c3e4d1",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 360,
        "wires": []
    },
    {
        "id": "8a4e0cccf4086b84",
        "type": "change",
        "z": "c8a66f4349d507f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameter.globoid",
                "pt": "msg",
                "to": "8f4fa71f-cf31-4dc2-8cec-b6177a4b90d0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 360,
        "wires": [
            [
                "20bd0f7a9c74c4dc"
            ]
        ]
    },
    {
        "id": "126e8ebdf0040d8f",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "f7b9963cbb2a3b11",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 580,
        "wires": []
    },
    {
        "id": "61d30b5bef769b3c",
        "type": "function",
        "z": "c8a66f4349d507f0",
        "name": "Set Url PUT",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + `/api/now/table/incident/1234`\nu_rpa = 'running'\nmsg.url = path\nmsg.payload = `{\"u_rpa\": \"${u_rpa}\"}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 580,
        "wires": [
            [
                "f7b9963cbb2a3b11"
            ]
        ]
    },
    {
        "id": "00ffa84f17143e7c",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "environment variable database host",
        "info": "",
        "x": 620,
        "y": 100,
        "wires": []
    },
    {
        "id": "0cffc008739ed499",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "connect/select database",
        "info": "",
        "x": 590,
        "y": 200,
        "wires": []
    },
    {
        "id": "12e7ebed1ffc96cb",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "get GLIVE",
        "info": "",
        "x": 681,
        "y": 324,
        "wires": []
    },
    {
        "id": "deaa409bf9c88a3c",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "get Sales Force",
        "info": "",
        "x": 560,
        "y": 440,
        "wires": []
    },
    {
        "id": "92854b1a358f9223",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "Envroment Service-Now",
        "info": "",
        "x": 550,
        "y": 540,
        "wires": []
    },
    {
        "id": "84d13a192c7f8864",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "get Service Now",
        "info": "",
        "x": 560,
        "y": 640,
        "wires": []
    },
    {
        "id": "d60d6927e68891c5",
        "type": "function",
        "z": "c8a66f4349d507f0",
        "name": "",
        "func": "msg.query = `SELECT a.ProductCode, a.ProductFamily, a.EVA_Ato_de_Cancelamento__c, a.EVA_Canal_cancelamento__c, a.EVA_Canal_compra__c,\n   a.EVA_Cancelamento_Final_Ciclo__c, a.EVA_Data_Hora_da_compra__c, a.EVA_Data_Hora_de_cancelamento__c, a.EVA_Foi_Trial__c,\n   a.EVA_Forma_Cancelamento__c, a.EVA_Forma_pagamento__c, a.EVA_Motivo_Cancelamento__c, a.EVA_Motivo_da_suspensao__c, a.EVA_Oferta__c,\n   a.EVA_Periodo_Trial_Form__c, a.EVA_Preco__c, a.EVA_Produto_pai__c, a.EVA_Status_Integracao__c, a.EVA_Status_da_Cobranca__c,\n   a.EVA_Tipo_Cancelamento__c, a.EVA_Trial__c, a.EVA_Visivel_cesta__c, a.EVA_brmContaFaturaId__c, a.EVA_brmContaFaturaPagamentoId__c,\n   a.EVA_brmContaFaturaServicoId__c, a.Gift_card__c, a.EVA_Tipo_de_pedido__c, a.EVA_Caracteristica_Produto__c, a.EVA_Data_Reativacao__c,\n   a.EVA_Origem_Id__c, a.EVA_Data_da_Migracao__c, a.EVA_ID_Assinatura_Legado__c, a.EVA_Lote_Migracao__c, a.EVA_Data_Final_Gift_Card__c,\n   a.Data_convers_o_efetiva__c, a.EVA_Descricao_OrigemID__c, a.EVA_Tipo_de_aquisicao__c, a.EVA_Vencimento_Boleto__c,\n   a.EVA_Checkbox_Visivel_na_cesta__c, a.D2C_Justificativa_recompra__c, a.D2C_Liberar_Recompra__c, a.D2C_Moeda__c, a.D2C_OneTimeDiscountPrice__c,\n   a.D2C_Preco_Internacional__c, a.D2C_RecurringCalculatedPrice__c, a.D2C_RecurringCharge__c, a.D2C_RecurringDiscountPrice__c,\n   a.D2C_RecurringTotal__c, a.D2C_DataHora_Desistencia_Cancelamento__c, a.D2C_DataUltimaTrocaPagamento__c, a.EVA_Status_da_Assinatura__c,\n   a.D2C_DOM__c, b.Name, b.EVA_CPF__c, b.EVA_Email__c, b.EVA_GloboID__c, b.EVA_brmId__c, b.EVA_clienteValidadoSerasa__c,\n   b.EVA_dataUltimaConsultaSerasa__c, b.EVA_UltimoAno_Cartola__c, b.D2C_Pais_Autodeclarado__c, b.D2C_Pais_Geolocalizado__c,\n   b.D2C_Ano_de_Cancelamento_Cartola__c, b.D2C_Elegivel_promocao_ex_cartoleiro__c, b.DisneyActivationDate__c, b.DisneyActive__c,\n   b.D2C_hasAddon__c, b.D2C_ActivationDeezer__c, b.D2C_DeezerActivationDate__c, b.D2C_ActivationDiscovery__c, b.D2C_DiscoveryActivationDate__c\nFROM Asset a, Asset.Account b\nwhere b.Eva_GloboID__c = '${msg.parameter.globoid}'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 480,
        "wires": [
            [
                "086442bab41f47f1"
            ]
        ]
    },
    {
        "id": "086442bab41f47f1",
        "type": "soql",
        "z": "c8a66f4349d507f0",
        "name": "RPA_SOQL_SF",
        "query": "",
        "connection": "7acce723d51c6064",
        "fetchAll": true,
        "returnJSON": true,
        "x": 900,
        "y": 480,
        "wires": [
            [
                "c4dfc3a0fe52d26b"
            ]
        ]
    },
    {
        "id": "9b6fd6d98c0d03b9",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "GET BRM",
        "info": "",
        "x": 620,
        "y": 780,
        "wires": []
    },
    {
        "id": "58b85625106bd795",
        "type": "debug",
        "z": "c8a66f4349d507f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 820,
        "wires": []
    },
    {
        "id": "aeec6b8368666926",
        "type": "change",
        "z": "c8a66f4349d507f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameter.globoid",
                "pt": "msg",
                "to": "8f4fa71f-cf31-4dc2-8cec-b6177a4b90d0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "17b6870ea215d657"
            ]
        ]
    },
    {
        "id": "646e18bb40273563",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "477d3c1aa6b9b48b"
            ]
        ]
    },
    {
        "id": "634104d3a7091adc",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "75aea20c85a1f230"
            ]
        ]
    },
    {
        "id": "bf72c297f2a96150",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "8a4e0cccf4086b84"
            ]
        ]
    },
    {
        "id": "57b6107c1b0d4b58",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "679850255e86aefc"
            ]
        ]
    },
    {
        "id": "67eb6ad98252c753",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "61d30b5bef769b3c"
            ]
        ]
    },
    {
        "id": "ce171261422f101a",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 680,
        "wires": [
            [
                "e76e0609efbbb890"
            ]
        ]
    },
    {
        "id": "1642ed3e98e91f11",
        "type": "inject",
        "z": "c8a66f4349d507f0",
        "name": "TEST START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "aeec6b8368666926"
            ]
        ]
    },
    {
        "id": "e76e0609efbbb890",
        "type": "function",
        "z": "c8a66f4349d507f0",
        "name": "Set Url GET",
        "func": "path = env.get(\"RPA_SERVICENOW_URL\") + env.get(\"RPA_SERVICENOW_GET_INCIDENTS\")\nmsg.url = path\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 680,
        "wires": [
            [
                "55121ebcb7626bb5"
            ]
        ]
    },
    {
        "id": "55121ebcb7626bb5",
        "type": "subflow:31d3ae1201a194fd",
        "z": "c8a66f4349d507f0",
        "name": "",
        "x": 760,
        "y": 680,
        "wires": [
            [
                "126e8ebdf0040d8f"
            ]
        ]
    },
    {
        "id": "17b6870ea215d657",
        "type": "function",
        "z": "c8a66f4349d507f0",
        "name": "Set Url GET",
        "func": "path = env.get(\"RPA_BRM_DATA_URL\") + '/GetBRM'\nmsg.url = path\nmsg.method = 'POST'\nmsg.payload = `{ \n        \"FunctionName\" : \"PIN.FC_GET_SERVICES_INFO_BY_GLOBO_ID\",\n        \"InputParameters\":  [\n           { \"Name\": \"GloboId\",\n             \"Value\": \"${msg.parameter.globoid}\" }                 \n        ]\n  }`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 820,
        "wires": [
            [
                "cc6c8516e0568428"
            ]
        ]
    },
    {
        "id": "cc6c8516e0568428",
        "type": "subflow:eb03a259e83e8e17",
        "z": "c8a66f4349d507f0",
        "name": "",
        "x": 790,
        "y": 820,
        "wires": [
            [
                "58b85625106bd795"
            ]
        ]
    },
    {
        "id": "7f643ca2c49d9636",
        "type": "comment",
        "z": "c8a66f4349d507f0",
        "name": "Ver.1.0 // Date: 01/06/2022 // Developer: Alysson Alves //",
        "info": "Ver.1.0 //\nDate: 01/06/2022 //\nDeveloper: Alysson Alves //",
        "x": 230,
        "y": 40,
        "wires": []
    }
]